{"ast":null,"code":"var _jsxFileName = \"/Users/darkvedor/Projects/React-Restaurant-App/client/src/pages/Checkout.js\";\nimport React, { Component } from 'react';\nimport CustomParallax from \"../components/CustomParallax\";\nimport home_top from \"../assets/home_top.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CartTotalsCheckout from \"../components/CartTotalsCheckout\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { postNewOrder } from \"../utils/api\";\nimport { Set, Reset } from \"../redux/actions/cartActions\";\nimport { round } from \"../utils/functions\";\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expYear: '',\n      expMonth: '',\n      cardName: '',\n      cardNum: '',\n      cvv: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleNewOrder = async event => {\n      event.preventDefault();\n      let res = await postNewOrder(this.props.email, this.state, this.props.items, this.props.total, this.props.totalPrice + 3.5);\n\n      if (res) {\n        this.props.Reset();\n        this.props.history.push('');\n      }\n    };\n  }\n\n  validateForm() {\n    return !(this.state.expYear.length > 0 && this.state.expMonth.length > 0 && this.state.cardName.length > 0 && this.state.cardNum.length > 0 && this.state.cvv.length > 0);\n  }\n\n  render() {\n    const checkout = React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-uppercase mr-2 my-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"My Cart\"), React.createElement(Card, {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"EMAIL ADDRESS\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.email))), React.createElement(Card, {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"DELIVERY ADDRESS\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.firstName, \" \", this.props.lastName), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.address), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.city), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.country), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.zip))), React.createElement(Card, {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"PAYMENT\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"BILLING ADDRESS\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.firstName, \" \", this.props.lastName), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.address), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.city), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.country), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.zip), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"PAYMENT TYPE\"), React.createElement(Form, {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"cardNum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Card Number\"), React.createElement(Form.Control, {\n      onChange: this.handleChange,\n      type: \"number\",\n      placeholder: \"Card Number\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Expiry Date\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"expMonth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      onChange: this.handleChange,\n      as: \"select\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Choose...\"), ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, num);\n    }))), React.createElement(Form.Group, {\n      controlId: \"expYear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      onChange: this.handleChange,\n      as: \"select\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Choose...\"), ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, num);\n    })))), React.createElement(Form.Group, {\n      controlId: \"cardName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Name On Card\"), React.createElement(Form.Control, {\n      onChange: this.handleChange,\n      placeholder: \"Name On Card\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"cvv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"CVV\"), React.createElement(Form.Control, {\n      onChange: this.handleChange,\n      type: \"number\",\n      placeholder: \"CVV\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))))), React.createElement(Col, {\n      className: \"ml-lg-5 pl-lg-2 mt-4 mt-lg-0\",\n      xs: 12,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(CartTotalsCheckout, {\n      handleNewOrder: this.handleNewOrder,\n      disabled: this.validateForm(),\n      buttonText: \"Place Order\",\n      total: this.props.total,\n      totalPrice: round(this.props.totalPrice),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n    const needToLogin = React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"You must Login or Signup to checkout\"), React.createElement(Link, {\n      to: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"To Login/Signup\")));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(CustomParallax, {\n      title: \"Checkout\",\n      img: home_top,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"my-auto Checkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.props.loggedIn ? checkout : needToLogin));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    total: state.cart.total,\n    totalPrice: state.cart.totalPrice,\n    loggedIn: state.user.loggedIn,\n    email: state.user.email,\n    firstName: state.user.firstName,\n    lastName: state.user.lastName,\n    address: state.user.address,\n    zip: state.user.zip,\n    city: state.user.city,\n    country: state.user.country,\n    houseNum: state.user.houseNum\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Set: (title, num) => {\n      dispatch(Set(title, num));\n    },\n    Reset: (title, num) => {\n      dispatch(Reset(title, num));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","map":{"version":3,"sources":["/Users/darkvedor/Projects/React-Restaurant-App/client/src/pages/Checkout.js"],"names":["React","Component","CustomParallax","home_top","Container","Row","Col","CartTotalsCheckout","Link","connect","Card","Button","Form","postNewOrder","Set","Reset","round","Checkout","state","expYear","expMonth","cardName","cardNum","cvv","handleChange","e","setState","target","id","value","handleNewOrder","event","preventDefault","res","props","email","items","total","totalPrice","history","push","validateForm","length","render","checkout","firstName","lastName","address","city","country","zip","map","num","needToLogin","loggedIn","mapStateToProps","cart","user","houseNum","mapDispatchToProps","dispatch","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CustomParallax from \"../components/CustomParallax\";\nimport home_top from \"../assets/home_top.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CartTotalsCheckout from \"../components/CartTotalsCheckout\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {postNewOrder} from \"../utils/api\";\nimport {Set, Reset} from \"../redux/actions/cartActions\";\nimport {round} from \"../utils/functions\";\n\nclass Checkout extends Component {\n    state = {\n        expYear: '',\n        expMonth: '',\n        cardName: '',\n        cardNum: '',\n        cvv: ''\n    };\n\n    validateForm() {\n        return !(this.state.expYear.length > 0 && this.state.expMonth.length > 0 && this.state.cardName.length > 0 && this.state.cardNum.length > 0 && this.state.cvv.length > 0);\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleNewOrder = async (event) => {\n        event.preventDefault();\n        let res = await postNewOrder(this.props.email, this.state, this.props.items, this.props.total, this.props.totalPrice + 3.5);\n        if (res) {\n            this.props.Reset();\n            this.props.history.push('');\n        }\n    };\n\n    render() {\n\n        const checkout = <Row>\n            <Col xs={12} lg={8}>\n                <h4 className='text-uppercase mr-2 my-auto'>My Cart</h4>\n\n                <Card className='mt-3'>\n                    <Card.Header>EMAIL ADDRESS</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            {this.props.email}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card className='mt-3'>\n                    <Card.Header>DELIVERY ADDRESS</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            {this.props.firstName} {this.props.lastName}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.address}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.city}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.country}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.zip}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card className='mt-3'>\n                    <Card.Header>PAYMENT</Card.Header>\n                    <Card.Body>\n                        <Card.Title>\n                            BILLING ADDRESS\n                        </Card.Title>\n                        <Card.Text>\n                            {this.props.firstName} {this.props.lastName}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.address}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.city}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.country}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.zip}\n                        </Card.Text>\n\n                        <hr/>\n\n                        <Card.Title>\n                            PAYMENT TYPE\n                        </Card.Title>\n                        <Form className='my-4'>\n                            <Form.Group controlId=\"cardNum\">\n                                <Form.Label>Card Number</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"Card Number\" required/>\n                            </Form.Group>\n\n                            <Form.Label>Expiry Date</Form.Label>\n                            <Form.Row>\n                                <Form.Group controlId=\"expMonth\">\n                                    <Form.Control onChange={this.handleChange} as=\"select\" required>\n                                        <option disabled selected>Choose...</option>\n                                        {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n                                            return <option>{num}</option>\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"expYear\">\n                                    <Form.Control onChange={this.handleChange} as=\"select\" required>\n                                        <option disabled selected>Choose...</option>\n                                        {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n                                            return <option>{num}</option>\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"cardName\">\n                                <Form.Label>Name On Card</Form.Label>\n                                <Form.Control onChange={this.handleChange} placeholder=\"Name On Card\" required/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"cvv\">\n                                <Form.Label>CVV</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"CVV\" required/>\n                            </Form.Group>\n\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n            <Col className='ml-lg-5 pl-lg-2 mt-4 mt-lg-0' xs={12} lg={3}>\n                <CartTotalsCheckout handleNewOrder={this.handleNewOrder} disabled={this.validateForm()} buttonText='Place Order'\n                                    total={this.props.total}\n                                    totalPrice={round(this.props.totalPrice)}/>\n            </Col>\n        </Row>;\n\n        const needToLogin =\n            <div className='text-center'>\n                <h2>\n                    You must Login or Signup to checkout\n                </h2>\n                <Link to='login'>\n                    <Button variant='warning' className='mt-4'>\n                        To Login/Signup\n                    </Button>\n                </Link>\n            </div>;\n\n        return (\n            <React.Fragment>\n                <CustomParallax title='Checkout' img={home_top} height={300}/>\n                <Container className='my-auto Checkout'>\n                    {this.props.loggedIn ? checkout : needToLogin}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items,\n        total: state.cart.total,\n        totalPrice: state.cart.totalPrice,\n        loggedIn: state.user.loggedIn,\n        email: state.user.email,\n        firstName: state.user.firstName,\n        lastName: state.user.lastName,\n        address: state.user.address,\n        zip: state.user.zip,\n        city: state.user.city,\n        country: state.user.country,\n        houseNum: state.user.houseNum,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        Set: (title, num) => {\n            dispatch(Set(title, num))\n        },\n        Reset: (title, num) => {\n            dispatch(Reset(title, num))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout)\n"]},"metadata":{},"sourceType":"module"}