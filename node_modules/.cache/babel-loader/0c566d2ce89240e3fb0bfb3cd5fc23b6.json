{"ast":null,"code":"var _jsxFileName = \"/Users/darkvedor/Projects/React-Restaurant-App/client/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { userLogin } from \"../redux/actions/userActions\";\nimport { getLogin } from \"../utils/api\";\nimport { connect } from \"react-redux\";\nimport { Set, Reset } from \"../redux/actions/cartActions\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      remember: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleCheckbox = e => {\n      this.setState({\n        remember: e.target.checked\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let res = await getLogin(this.state.email.toLowerCase(), this.state.password, this.state.remember);\n\n      if (res) {\n        this.props.history.push('');\n        this.props.userLogin(res.data.user);\n        this.props.Reset();\n        this.setItemsNum(res.data.currentItems);\n      } else {\n        this.setState({\n          password: '',\n          remember: false\n        });\n      }\n    };\n  }\n\n  validateForm() {\n    return !(this.state.email.length > 0 && this.state.password.length > 0);\n  }\n\n  setItemsNum(items) {\n    Object.keys(items).forEach(item => {\n      this.props.Set(item, items[item]);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"mt-5 pt-3 Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 6,\n      className: \"border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-uppercase font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Email/Username\"), React.createElement(Form.Control, {\n      placeholder: \"Email/Username\",\n      autoFocus: true,\n      required: true,\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Remember me\",\n      onChange: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      variant: \"dark\",\n      type: \"submit\",\n      disabled: this.validateForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Col, {\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-uppercase font-weight-bold \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"New Customer?\"), React.createElement(Link, {\n      to: \"signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Button, {\n      block: true,\n      variant: \"warning\",\n      bsSize: \"large\",\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Signup\"))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userLogin: data => {\n      dispatch(userLogin(data));\n    },\n    Set: (title, num) => {\n      dispatch(Set(title, num));\n    },\n    Reset: () => {\n      dispatch(Reset());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/darkvedor/Projects/React-Restaurant-App/client/src/pages/Login.js"],"names":["React","Component","Button","Container","Row","Col","Link","Form","userLogin","getLogin","connect","Set","Reset","Login","state","email","password","remember","handleChange","e","setState","target","id","value","handleCheckbox","checked","handleSubmit","preventDefault","res","toLowerCase","props","history","push","data","user","setItemsNum","currentItems","validateForm","length","items","Object","keys","forEach","item","render","mapDispatchToProps","dispatch","title","num"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Link} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport {userLogin} from \"../redux/actions/userActions\";\nimport {getLogin} from \"../utils/api\";\nimport {connect} from \"react-redux\";\nimport {Set, Reset} from \"../redux/actions/cartActions\";\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        remember: false,\n    };\n\n    validateForm() {\n        return !(this.state.email.length > 0 && this.state.password.length > 0);\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.id]: e.target.value});\n    };\n\n    handleCheckbox = e => {\n        this.setState({\n            remember: e.target.checked\n        });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let res = await getLogin(this.state.email.toLowerCase(), this.state.password, this.state.remember);\n        if (res) {\n            this.props.history.push('');\n            this.props.userLogin(res.data.user);\n            this.props.Reset();\n            this.setItemsNum(res.data.currentItems);\n        } else {\n            this.setState({\n                password: '',\n                remember: false\n            });\n        }\n    };\n\n    setItemsNum(items) {\n        Object.keys(items).forEach((item) => {\n                this.props.Set(item, items[item])\n            }\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container className=\"mt-5 pt-3 Login\">\n                    <Row>\n                        <Col xs={6} className='border-right'>\n                            <h3 className='text-center text-uppercase font-weight-bold'>\n                                Login\n                            </h3>\n                            <Form onSubmit={this.handleSubmit} className='mt-4'>\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email/Username</Form.Label>\n                                    <Form.Control placeholder=\"Email/Username\" autoFocus required value={this.state.email}\n                                                  onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\n                                                  onChange={this.handleChange} required/>\n                                </Form.Group>\n                                <Form.Group controlId=\"remember\">\n                                    <Form.Check type=\"checkbox\" label=\"Remember me\" onChange={this.handleCheckbox}/>\n                                </Form.Group>\n                                <Button block variant=\"dark\" type=\"submit\" disabled={this.validateForm()}>\n                                    Login\n                                </Button>\n                            </Form>\n\n                        </Col>\n\n                        <Col xs={6}>\n                            <h3 className='text-center text-uppercase font-weight-bold '>\n                                New Customer?\n                            </h3>\n                            <Link to='signup'>\n                                <Form.Label/>\n                                <Button block variant='warning' bsSize=\"large\" className='mt-4'>\n                                    Signup\n                                </Button>\n                            </Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogin: (data) => {\n            dispatch(userLogin(data))\n        },\n        Set: (title, num) => {\n            dispatch(Set(title, num))\n        },\n        Reset: () => {\n            dispatch(Reset())\n        }\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}