{"version":3,"sources":["assets/home_sitting.jpg","assets/home_kitchen.jpg","assets/card_home_2.jpg","assets/card_home_3.jpg","components/CustomParallax.js","components/KitchenNames.js","components/HomeCards.js","components/CustomContainer.js","components/ColumnsContainer.js","pages/Home.js","redux/actions/cartActions.js","utils/api.js","components/CustomButtonGroup.js","utils/functions.js","components/HoverPopupItem.js","components/HoverPopup.js","redux/actions/userActions.js","components/Header.js","components/DeliveryCard.js","components/DeliveryMenu.js","pages/Delivery.js","pages/Error.js","pages/Gallery.js","components/MenuItem.js","components/Menu.js","pages/menus/Evening.js","pages/menus/Lunch.js","components/CartTableItem.js","components/CartTotalsCart.js","pages/Cart.js","pages/Login.js","pages/Signup.js","pages/Terms.js","components/CartTotalsCheckout.js","pages/Checkout.js","pages/Readme.js","pages/Admin.js","components/Footer.js","App.js","redux/reducers/cartReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","index.js","assets/home_top.jpg","assets/menu_top.jpg","assets/card_home_1.jpg"],"names":["module","exports","__webpack_require__","p","CustomParallax","props","displayBtn","buttonText","react_default","a","createElement","Button_default","className","size","variant","dist","bgImage","img","strength","Container_default","style","height","Row_default","Col_default","title","text","KitchenNames","es_Container","es_Row","es_Col","HomeCards","CardDeck","Card","Img","src","card_home_1","card_home_2","card_home_3","CustomContainer","ColumnsContainer","md","Home","Fragment","home_top","home_sitting","home_kitchen","Set","num","type","Zero","postItemsUpdate","_x","_x2","_x3","_postItemsUpdate","apply","this","arguments","_callee","email","action","res","json","regenerator_default","wrap","_context","prev","next","fetch","concat","method","headers","Content-Type","sent","status","alert","msg","stop","getUserAuth","_getUserAuth","_callee2","_context2","abrupt","getAdminData","_x4","_x5","_getAdminData","_callee3","loggedIn","_context3","getLogin","_x6","_x7","_x8","_getLogin","_callee4","password","remember","_context4","_callee5","_context5","postSignup","_x9","_postSignup","_callee6","data","_context6","body","JSON","stringify","postNewOrder","_x10","_x11","_x12","_x13","_x14","_postNewOrder","_callee7","payment","items","total","totalPrice","payload","_context7","Object","values","filter","item","map","orderId","CustomButtonGroup","handleAdd","_this","Add","handleSub","Sub","addCartElement","onClick","plusMinusElement","ButtonGroup_default","Component","connect","state","user","cart","dispatch","round","Math","HoverPopupItem","handleZero","xs","fi_index_esm","components_CustomButtonGroup","price","Image_default","width","rounded","HoverPopup","show","toggle","setState","hide","HoverPopupItemRender","components_HoverPopupItem","_this2","checkout","disabled","popup","Overlay_default","assign","container","target","ReactDOM","findDOMNode","refs","placement","Popover_default","onMouseOver","onMouseOut","Title","as","Content","scrollArea_default","speed","maxHeight","horizontal","Form","react_router_dom","to","position","ref","index_esm","Badge_default","top","right","pill","userLogin","Header","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLogout","handleCollapse","userLogout","_postLogout","postLogout","_ref","asyncToGenerator","mark","e","window","innerWidth","document","getElementsByClassName","click","t0","login","Navbar","Text","firstName","inline","collapseOnSelect","expand","bg","sticky","Brand","Collapse","id","Nav","Link","href","preventDefault","location","NavDropdown","Divider","components_HoverPopup","Toggle","DeliveryCard","innerHeight","sm","lg","border","Body","description","objectFit","DeliveryMenu","search","handleChange","value","toUpperCase","itemsIterate","meal","includes","cardRender","appetizer","main","desert","InputGroup_default","FormControl","onChange","placeholder","Append","length","Delivery","components_DeliveryMenu","Error","Gallery","imgs","loading","addEventListener","images","forEach","obj","toConsumableArray","col","gallery","Spinner_default","animation","role","GridList","cellHeight","floor","cols","GridListTile","key","MenuItem","menuItemRender","components_MenuItem","background","Evening","menu_top","components_Menu","Lunch","CartTableItem","CartTotalsCart","Card_default","Footer","block","alt","fontSize","full","Table_default","responsive","keys","components_CartTableItem","cartTableItemRender","empty","Login","defineProperty","handleCheckbox","checked","handleSubmit","toLowerCase","history","push","Reset","setItemsNum","currentItems","Form_default","onSubmit","Group","controlId","Label","Control","autoFocus","required","Check","label","validateForm","bsSize","Signup","agree","lastName","address","city","country","houseNum","event","userSignup","Row","Col","selected","Terms","Container_Container","data-hs-cos-general-type","data-hs-cos-type","textAlign","fontWeight","fontFamily","CartTotalsCheckout","handleNewOrder","Checkout","expYear","expMonth","cardName","cardNum","cvv","zip","needToLogin","Readme","itemProp","rel","Admin","main_default","theme","displayDataTypes","enableClipboard","collapseStringsAfterLength","Jumbotron_default","App","cookie","components_Header","react_router","exact","path","component","MenuLunch","MenuEvening","Cart","initialState","Fried Spring Rolls","Pani Puri","Mo:Mo","Sell-Roti","Fried Tiger Shrimp Rolls","Duck Choila","Khaja Set","Bara Set","Chicken and Dhido","Mutton and Rice","Fried Banana","Rasbari and yogurt","Jilebi","combineReducers","undefined","objectSpread","reduxStore","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","render","es","store","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.a98ee30e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_sitting.a80934e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home_kitchen.9d99e494.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card_home_2.3a99f59f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card_home_3.2930914b.jpg\";","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport {Parallax} from 'react-parallax';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function CustomParallax(props) {\n\n    const displayBtn = props.buttonText && (\n        <Button className='mt-5' size=\"lg\" variant=\"outline-light\">{props.buttonText}</Button>);\n\n    return (\n        <Parallax className='jumbotron jumbotron-fluid text-white shadow text-center bg-dark mb-5' bgImage={props.img} strength={400}>\n            <Container style={{height: props.height}}>\n                <Row className='h-100'>\n                    <Col className=\"m-auto\">\n                        <h1 className='display-4 font-weight-bold'>\n                            {props.title}\n                        </h1>\n                        <p className='m-auto w-75'>\n                            {props.text}\n                        </p>\n                        {displayBtn}\n                    </Col>\n                </Row>\n            </Container>\n        </Parallax>\n    );\n}","import React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nexport default function KitchenNames() {\n    return (\n        <Container className='text-left text-dark text-uppercase'>\n            <Row className='mt-3 h-auto'>\n                <Col>\n                    <h2>Gaurab Dhakal</h2>\n                    <h5 className='text-secondary'>EXECUTIVE CHEF</h5>\n                    <p className='text-lowercase'>He’s risen up the ranks to become executive chef at award-winning hotel, The LaLiT London, and has set his sights on becoming Nepal’s first Michelin-starred chef.\n                    </p>\n                </Col>\n\n                <Col>\n                    <h2>MATTEO CAPON\n                    </h2>\n                    <h5 className='text-secondary'>CHEF DE CUISINE </h5>\n                    <p className='text-lowercase'>Prepare and cook various Nepali traditional sauces and foods including meat, poultry, eggs, dairy, fish, vegetables, nuts in accordance with Nepali traditional style with excellent cooking ability;\nPlan menus, determine size of food portions, estimate food requirements and cost, and monitor and order supplies,\n                    </p>\n                </Col>\n\n                <Col>\n                    <h2>ANGIE WALSH </h2>\n                    <h5 className='text-secondary'>PASTRY CHEF </h5>\n                    <p className='text-lowercase'>Train staff in preparation, cooking and handling of food;\nMaintain inventory and records of food, supplies and equipment;\nClean kitchen and work area;\nManage kitchen operations.</p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import React from 'react';\nimport {Card, CardDeck, Col, Container, Row} from \"react-bootstrap\";\nimport card_home_1 from \"../assets/card_home_1.jpg\";\nimport card_home_2 from \"../assets/card_home_2.jpg\";\nimport card_home_3 from \"../assets/card_home_3.jpg\";\n\nexport default function HomeCards() {\n    return (\n        <Container className='mt-5'>\n            <Row>\n                <Col>\n                    <CardDeck>\n                        <Card className='shadow'>\n                            <Card.Img src={card_home_1}/>\n                        </Card>\n                        <Card className='shadow'>\n                            <Card.Img src={card_home_2}/>\n                        </Card>\n                        <Card className='shadow'>\n                            <Card.Img src={card_home_3}/>\n                        </Card>\n                    </CardDeck>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nexport default function CustomContainer() {\n    return (\n        <Container className='h-auto my-4 pt-3'>\n            <Row className='h-100'>\n                <Col className=\"text-center m-auto\">\n                    <h2 className='text-uppercase'>a destination</h2>\n                    <p className='m-auto w-75 pb-lg-5'>Praesent commodo\n                        cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                        lacus vel augue laoreet rutrum faucibus dolor auctor. Nullam quis risus eget urna mollis\n                        ornare vel eu leo. Aenean lacinia bibendum nulla sed consectetur.\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nexport default function ColumnsContainer() {\n    return (\n        <Container className='mt-4'>\n            <Row className='text-center'>\n                <Col>\n                    <h2>A DESTINATION</h2>\n                </Col>\n            </Row>\n            <Row className='mt-3 text-left h-auto mb-4'>\n                <Col className='mx-auto' md={5}>\n                    <p>Nepali/Nepalese cuisine comprises a variety of cuisines based upon ethnicity, soil and climate relating to Nepal's cultural diversity and geography. Dal-bhat-tarkari (Nepali: दाल भात तरकारी) is eaten throughout Nepal. Dal is a soup made of lentils and spices, served over boiled grain, bhat—usually rice but sometimes another grain - and a vegetable soup, tarkari. Condiments are usually small amounts of spicy pickle (achaar, अचार) which can be fresh or fermented, (mainly of dried mustard greens called as 'gundruk ko achar' and radish known as 'mula ko achar') and of which there are a considerable number of varieties.[1] Other accompaniments may be sliced lemon (nibuwa) or lime (kagati) with fresh green chilli (hariyo khursani) and a fried papad (thin, crisp disc-shaped food). Dhindo (ढिंडो) is a traditional food of Nepal.\n                    </p>\n                </Col>\n\n                <Col className='mx-auto' md={5}>\n                    <p>Much of the cuisine is variations on Asian themes. Momo is a Nepalese style dumpling filled with minced meat in a flour dough, given different shapes and then cooked by steaming. It is one of the most popular foods in Nepal and the regions of Sikkim, Darjeeling and Kalimpong in India where ethnic Nepalese have a presence. Momo were originally filled with buffalo meat but are now commonly filled with goat or chicken, as well as vegetarian preparations. Special foods such as sel roti, finni roti and patre are eaten during festivals such as Tihar. Sel roti is a traditional Nepali homemade ring-shaped rice bread which is sweet to taste. Other foods have hybrid Tibetan and Indian influence.\n\nChow mein is a Nepali favorite in modern times based on Chinese-style stir fried noodles. It is one of the most beloved everyday staple lunches in Nepali/Nepalese households.\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import React from 'react';\nimport CustomParallax from '../components/CustomParallax'\nimport home_top from '../assets/home_top.jpg'\nimport home_sitting from '../assets/home_sitting.jpg'\nimport home_kitchen from '../assets/home_kitchen.jpg'\nimport KitchenNames from \"../components/KitchenNames\";\nimport HomeCards from \"../components/HomeCards\";\nimport CustomContainer from \"../components/CustomContainer\";\nimport ColumnsContainer from \"../components/ColumnsContainer\";\n\nexport default function Home() {\n    return (\n        <React.Fragment className='Home'>\n            <CustomParallax title='home cuisine' text=\"Voted IDC's Best Nepalese Restaurant\" img={home_top} height='40em'/>\n            <CustomContainer/>\n            <CustomParallax title='eat together'\n                            text='Every plate achieves that elusive, cuisine-defining balance of sweet, salty, and sour — even dessert.'\n                            img={home_sitting} height='30em'/>\n            <HomeCards/>\n            <ColumnsContainer/>\n            <CustomParallax title='the kitchen' img={home_kitchen} height='40em'/>\n            <KitchenNames/>\n        </React.Fragment>\n    );\n}","export function Add(title, num) {\n    return {\n        type: \"ADD\",\n        title: title,\n        num: num,\n    }\n}\n\nexport function Set(title, num) {\n    return {\n        type: \"SET\",\n        title: title,\n        num: num\n    }\n}\n\nexport function Sub(title, num) {\n    return {\n        type: \"SUB\",\n        title: title,\n        num: num\n    }\n}\n\nexport function Zero(title) {\n    return {\n        type: \"ZERO\",\n        title: title,\n        num: 0\n    }\n}\n\nexport function Reset() {\n    return {\n        type: \"RESET\",\n    }\n}","export async function postItemsUpdate(email, title, action) {\n    const res = await fetch(`/api/items/${email}/${title}/${action}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    const json = await res.json();\n    if (res.status !== 200) {\n        alert(json.msg)\n    }\n}\n\nexport async function getUserAuth() {\n    const res = await fetch(`/api/user/auth`);\n    const json = await res.json();\n    if (res.status === 200) {\n        return json;\n    } else {\n        alert(json.msg)\n    }\n}\n\nexport async function getAdminData(email, loggedIn) {\n    if (loggedIn) {\n        const res = await fetch(`/api/admin/data/${email}`);\n        const json = await res.json();\n        if (res.status === 200) {\n            return json;\n        } else {\n            alert(json.msg)\n        }\n    } else {\n        alert('Admin is not loggedIn')\n    }\n}\n\nexport async function getLogin(email, password, remember) {\n    let res = await fetch(`/api/user/login/${email}/${password}/${remember}`);\n    const json = await res.json();\n    if (res.status === 200) {\n        return json;\n    } else {\n        alert(json.msg)\n    }\n}\n\nexport async function postLogout() {\n    let res = await fetch(`/api/user/logout`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    const json = await res.json();\n    if (res.status !== 200) {\n        alert(json.msg)\n    }\n}\n\nexport async function postSignup(data) {\n    let res = await fetch('/api/user/signup', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    const json = await res.json();\n    if (res.status === 200) {\n        return json;\n    } else {\n        alert(json.msg)\n    }\n}\n\nexport async function postNewOrder(email, payment, items, total, totalPrice) {\n    let payload = {payment, total, totalPrice, items: {}};\n    Object.values(items)\n        .filter(item => item.num > 0)\n        .map(function (item) {\n            payload.items[item.title] = item.num;\n        });\n    let res = await fetch(`/api/order/new/${email}`, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    const json = await res.json();\n    if (res.status === 200) {\n        alert(`Your order has been received by the system.\\n Order ID: ${json.orderId}`);\n        return json;\n    } else {\n        alert(json.msg)\n    }\n}","import React, {Component} from 'react';\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport {connect} from \"react-redux\";\nimport {Add, Sub} from \"../redux/actions/cartActions\";\nimport {postItemsUpdate} from \"../utils/api\";\n\nclass CustomButtonGroup extends Component {\n\n    handleAdd = async () => {\n        this.props.Add(this.props.title, 1);\n        if (this.props.loggedIn) {\n            await postItemsUpdate(this.props.email, this.props.title, 'ADD')\n        }\n\n    };\n\n    handleSub = async () => {\n        this.props.Sub(this.props.title, 1);\n        if (this.props.loggedIn) {\n            await postItemsUpdate(this.props.email, this.props.title, 'SUB')\n        }\n    };\n\n    render() {\n        const addCartElement =\n            <Button className='py-2' variant=\"outline-dark\" onClick={this.handleAdd}>\n                Add to Cart\n            </Button>;\n        const plusMinusElement =\n            <ButtonGroup className='w-100' variant=\"outline-dark\">\n                <Button variant=\"outline-dark\" onClick={this.handleSub}> - </Button>\n                <Button className='disabled'\n                        variant=\"outline-dark\">{this.props.num ? this.props.num : 0}</Button>\n                <Button className='py-2' variant=\"outline-dark\" onClick={this.handleAdd}> + </Button>\n            </ButtonGroup>;\n        const num = this.props.num;\n        return (!num || num === 0) ? addCartElement : plusMinusElement;\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        Add: (title, num) => {\n            dispatch(Add(title, num))\n        },\n        Sub: (title, num) => {\n            dispatch(Sub(title, num))\n        }\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        email: state.user.email,\n        items: state.cart.items,\n        loggedIn: state.user.loggedIn\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomButtonGroup);\n\n","export function round(num) {\n    return Math.round(num * 100) / 100\n};","import React, {Component} from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport {FiTrash2} from \"react-icons/fi\";\nimport CustomButtonGroup from \"./CustomButtonGroup\";\nimport {connect} from \"react-redux\";\nimport { Zero } from \"../redux/actions/cartActions\";\nimport { postItemsUpdate } from \"../utils/api\";\nimport {round} from \"../utils/functions\";\n\nclass HoverPopupItem extends Component {\n\n    handleZero = async () => {\n        this.props.Zero(this.props.title);\n        if (this.props.loggedIn) {\n            await postItemsUpdate(this.props.email, this.props.title, 'ZERO')\n        }\n    };\n\n    render() {\n        return (\n            <Row className='py-2 border-bottom border-top'>\n                <Col xs={7} className='ml-3 px-0'>\n                    <Row>\n                        <Col className='my-auto pl-0 pr-1 text-right' xs={2}>\n                            <FiTrash2 className='shadow-sm my-auto' size='1.2em' onClick={this.handleZero}/>\n                        </Col>\n                        <Col className='my-auto pl-1' xs={9}>\n                            <h6 className='my-auto text-left'>{this.props.title}</h6>\n                        </Col>\n                    </Row>\n\n\n                    <Row className='mt-2 mx-0'>\n                        <Col className='px-0' xs={7}>\n                            <CustomButtonGroup title={this.props.title} num={this.props.num}/>\n                        </Col>\n                        <Col xs={5} className='my-auto pr-0'>\n                            <h6 className='text-left my-auto'>${round(this.props.price * this.props.num)}</h6>\n                        </Col>\n                    </Row>\n                </Col>\n\n                <Col className='ml-0 pl-0 my-auto' xs={4}>\n                    <Image className='text-left ml-0 pl-0' style={{height: '6.25em', width: '6.25em'}} src={this.props.img} rounded/>\n                </Col>\n\n            </Row>\n\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        Zero: (title) => {\n            dispatch(Zero(title))\n        }\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.user.loggedIn,\n        email: state.user.email\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HoverPopupItem);","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Popover from \"react-bootstrap/Popover\";\nimport Button from \"react-bootstrap/Button\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport Badge from \"react-bootstrap/Badge\";\nimport {FaShoppingCart} from \"react-icons/fa\";\nimport {Form} from \"react-bootstrap\";\nimport ScrollArea from \"react-scrollbar\";\nimport HoverPopupItem from './HoverPopupItem'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {round} from \"../utils/functions\";\n\n\nclass HoverPopup extends Component {\n    state = {\n        show: false,\n    };\n\n    toggle = () => {\n        this.setState({show: !this.state.show});\n    };\n\n    show = () => {\n        this.setState({show: true});\n    };\n\n    hide = () => {\n        this.setState({show: false});\n    };\n\n    HoverPopupItemRender = (item) => <HoverPopupItem img={item.img} title={item.title} price={item.price} num={item.num}/>;\n\n\n    render() {\n        const checkout = (this.props.total > 0) ?\n            (<Button variant='warning' onClick={this.hide}>Checkout</Button>) :\n            (<Button disabled variant='warning' onClick={this.hide}>Checkout</Button>);\n\n\n        const popup = (this.props.total > 0) ?\n            (<Overlay {...{\n                show: this.state.show,\n                container: this,\n                target: () => ReactDOM.findDOMNode(this.refs.target)\n            }} placement=\"bottom\">\n                <Popover className='text-dark' onMouseOver={this.show} onMouseOut={this.toggle}>\n                    <Popover.Title as=\"h2\" className='text-center'>\n                        My Cart\n                    </Popover.Title>\n                    <Popover.Content>\n                        <ScrollArea speed={0.3} style={{maxHeight: 400}} horizontal={false}>\n                            {Object.values(this.props.items).map(item =>\n                                (item.num > 0) ? this.HoverPopupItemRender(item) : null\n                            )}\n                        </ScrollArea>\n                    </Popover.Content>\n                    <Popover.Title className='text-center text-dark' as=\"h2\">\n                        Subtotal: ${round(this.props.totalPrice)}\n                    </Popover.Title>\n\n                    <Popover.Title as=\"h2\">\n                        <Form className='mx-4 d-flex justify-content-between'>\n                            <Link to='/cart'>\n                                <Button variant='dark' onClick={this.hide}>My Cart</Button>\n                            </Link>\n                            <Link to='/checkout'>\n                                {checkout}\n                            </Link>\n                        </Form>\n                    </Popover.Title>\n                </Popover>\n            </Overlay>) : null;\n\n        return (\n            <React.Fragment>\n                <Link to='/cart'>\n                    <Button variant=\"dark\" style={{position: 'relative'}} ref=\"target\" onClick={this.toggle}\n                            onMouseOver={this.show}\n                            onMouseOut={this.hide}>\n                        <FaShoppingCart className='mr-1' size='1.5em'/>\n                        <Badge style={{position: 'absolute', top: -8, right: -8}} pill variant=\"warning\">{this.props.total} </Badge>\n                    </Button>\n                </Link>\n                {popup}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items,\n        total: state.cart.total,\n        totalPrice: state.cart.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(HoverPopup)","export function userLogin(data) {\n    return {\n        type: \"LOGIN\",\n        data: data,\n    }\n}\n\nexport function userSignup(data) {\n    return {\n        type: \"SIGNUP\",\n        data: data,\n    }\n}\n\nexport function userLogout() {\n    return {\n        type: \"LOGOUT\"\n    }\n}\n","import React, { Component } from 'react';\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport HoverPopup from './HoverPopup';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { userLogout } from \"../redux/actions/userActions\";\nimport { postLogout } from \"../utils/api\";\n\nclass Header extends Component {\n    constructor(props, context) {\n        super(props, context);\n    }\n\n    handleLogout = () => {\n        this.handleCollapse();\n        this.props.userLogout();\n        postLogout();\n    };\n\n    handleCollapse = async (e) => {\n        try {\n            if (window.innerWidth < 1200) {\n                let toggle = await document.getElementsByClassName('navbar-toggler')[0]\n                toggle.click()\n            }\n        } catch (e) {\n\n        }\n    };\n\n    render() {\n        const login = (this.props.loggedIn === false) ?\n            (<Navbar.Text>\n                <Link onClick={this.handleCollapse} to='login' className='mr-md-3'>\n                    Login/Signup\n                </Link>\n            </Navbar.Text>)\n            :\n            (<Navbar.Text>\n                Hey, {this.props.firstName}\n                <Link onClick={this.handleLogout} className='ml-2 ml-md-5'>\n                    Logout\n                </Link>\n            </Navbar.Text>);\n\n        return (\n            <Navbar inline collapseOnSelect className='my-auto text-uppercase shadow py-1' expand=\"lg\" bg=\"white\" sticky='top'>\n                <Navbar.Brand className='nav-link pl-0 ml-md-5 pl-md-5 font-weight-bold'>\n                    <Link to='' className='text-dark'>\n                        Namaste Restaurant\n                    </Link>\n                </Navbar.Brand>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"h6 text-dark w-100\">\n                        <Nav.Link className='my-auto'>\n                            <Link to='delivery' onClick={this.handleCollapse} className='text-secondary'>\n                                Deliveries\n                            </Link>\n                        </Nav.Link>\n                        <Nav.Link className='my-auto'>\n                            <Link to='reservation' href='https://namaste-cafe-and-restaurant.resos.com/booking' onClick={(e) => {\n                                e.preventDefault();\n                                window.location.href='https://namaste-cafe-and-restaurant.resos.com/booking';\n                                }} className='text-secondary'>\n                                Reservation\n                            </Link>\n                        </Nav.Link>\n                        \n                        <NavDropdown className='my-auto text-dark' title='MENU' id=\"collapsible-nav-dropdown\">\n                            <Link to='menu.lunch' onClick={this.handleCollapse} className='text-secondary ml-3 mr-4'>\n                                lunch\n                            </Link>\n\n                            <NavDropdown.Divider/>\n\n                            <Link to='menu.evening' onClick={this.handleCollapse} className='text-secondary ml-3 mr-4'>\n                                evening\n                            </Link>\n\n                        </NavDropdown>\n                        <Nav.Link className='my-auto'>\n                            <Link to='gallery' onClick={this.handleCollapse} className='text-secondary'>\n                                gallery\n                            </Link>\n                        </Nav.Link>\n\n                        {this.props.loggedIn && this.props.email === 'admin' && <Nav.Link className='my-auto'>\n                            <Link to='admin' onClick={this.handleCollapse} className='text-secondary'>\n                                Admin\n                            </Link>\n                        </Nav.Link>}\n                        {window.innerWidth < 1200 ?\n                            <div className='position-absolute sticky-top align-self-end navbar-text text-capitalize text-muted py-2 my-1'>\n                                {login}\n                            </div>\n                            :\n                            <div className='ml-md-auto mr-md-3 my-auto navbar-text text-capitalize text-muted '>\n                                {login}\n                            </div>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n                <Nav className=\"ml-auto mr-sm-5 pr-sm-5 my-0\">\n                    <Nav.Link className='my-auto text-dark mr-sm-5 pr-sm-5 py-1'>\n                        <HoverPopup/>\n                    </Nav.Link>\n                </Nav>\n\n                <Navbar.Toggle className='ml-2'/>\n            </Navbar>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.user.loggedIn,\n        email: state.user.email,\n        firstName: state.user.firstName,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogout: () => {\n            dispatch(userLogout())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react';\nimport { Card } from 'react-bootstrap'\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport CustomButtonGroup from \"./CustomButtonGroup\";\n\nexport default function DeliveryCard(props) {\n\n        const height = window.innerHeight < 1200 ? (window.innerHeight < 400 ? '10em': '13em'): '18em';\n\n        return (\n            <Col xs={10} sm={6} md={4} lg={3} className='mx-auto mx-sm-0 mt-4'>\n                <Card className='h-100' border=\"dark\">\n                    <Card.Body className='py-3'>\n                        <Card.Title >\n                            <Row>\n                                <Col xs={7} className='text-capitalize'>{props.title}</Col>\n                                <Col className='text-right px-0'>\n                                    <p className='mx-2 my-0 p-0 text-secondary'>\n                                        ${props.price}\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Card.Title>\n                        <Card.Text className='mb-0 pb-0'>\n                            {props.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Img variant=\"top\" style={{objectFit: 'cover', height: height}} src={props.img}/>\n                    <CustomButtonGroup title={props.title} num={props.num}/>\n                </Card>\n            </Col>\n        )\n}\n\n","import React, { Component } from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport DeliveryCard from \"./DeliveryCard\";\nimport { connect } from \"react-redux\";\nimport {Form, FormControl} from \"react-bootstrap\";\nimport { FaSearch } from \"react-icons/fa\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nclass DeliveryMenu extends Component {\n    state = {\n        search: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({search: e.target.value.toUpperCase()})\n    };\n\n\n    itemsIterate = (meal) => {\n        return Object.values(this.props.items)\n            .filter(item =>\n                item.meal === meal && (item.title.toUpperCase().includes(this.state.search) || item.description.toUpperCase().includes(this.state.search) || item.price.toUpperCase().includes(this.state.search))\n            ).map(item => this.cardRender(item));\n    };\n\n    cardRender = (item) => <DeliveryCard img={item.img} title={item.title} price={item.price} description={item.description} num={item.num}/>;\n\n    render() {\n        const appetizer = this.itemsIterate('appetizer'),\n            main = this.itemsIterate('main'),\n            desert = this.itemsIterate('desert');\n\n        return (\n            <Container className='Delivery'>\n                <Form className='justify-content-center' inline>\n                    <InputGroup style={{width: \"50%\"}}>\n                        <FormControl onChange={this.handleChange} type=\"text\" placeholder='Search items'/>\n                        <InputGroup.Append>\n                            <InputGroup.Text id=\"inputGroupPrepend\">\n                                <FaSearch/>\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n\n                {appetizer.length > 0 &&\n                <>\n                    <h1 className='pt-5 mx-auto'>Appetizers</h1>\n                    <Row className='pb-3'>\n                        {appetizer}\n                    </Row>\n                </>}\n\n                {main.length > 0 &&\n                <>\n                    <h1 className='pt-5 mx-auto'>Main Course</h1>\n                    <Row className='pb-3'>\n                        {main}\n                    </Row>\n                </>}\n\n\n                {desert.length > 0 &&\n                <>\n                    <h1 className='pt-5 mx-auto'>Main Course</h1>\n                    <Row className='pb-3'>\n                        {desert}\n                    </Row>\n                </>}\n\n                {(desert.length === 0 && main.length === 0 && appetizer.length === 0) &&\n                <div className='text-center mt-5'>\n                    <h4>\n                        Your search didn't match any item\n                    </h4>\n                </div>\n                }\n\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items\n    }\n};\n\nexport default connect(mapStateToProps)(DeliveryMenu);","import React from 'react';\nimport DeliveryMenu from '../components/DeliveryMenu'\nimport CustomParallax from '../components/CustomParallax'\nimport home_top from \"../assets/home_top.jpg\";\n\nexport default function Delivery() {\n    return (\n        <React.Fragment>\n            <CustomParallax title='Deliveries' img={home_top} height={300}/>\n            <DeliveryMenu className='Delivery'/>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport CustomParallax from '../components/CustomParallax'\n\nexport default function Error() {\n    return (\n        <CustomParallax title='404 Page Not Found' height={700} text=\"Sorry...\n            We couldn't find the page you were looking for. This is either because:\n            There is an error in the URL entered into your web browser. Please check the URL and try again.\n            The page you are looking for has been moved or deleted.\"/>\n    );\n}","import React, {Component} from 'react';\nimport CustomParallax from '../components/CustomParallax'\nimport home_top from \"../assets/home_top.jpg\";\nimport GridList from \"@material-ui/core/GridList\";\nimport img from '../assets/card_home_1.jpg'\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Container from \"react-bootstrap/Container\";\n\nclass Gallery extends Component {\n    state = {\n        imgs: [],\n        loading: true,\n        width: window.innerWidth\n    };\n\n    async componentDidMount() {\n        window.addEventListener(\"resize\", () => {\n            this.setState({width: window.innerWidth});\n        });\n\n        const res = await fetch('/api/gallery');\n        const images = (await res.json()).images;\n        await images.forEach((obj) => {\n            obj.img = 'data:image/jpeg;base64,' + obj.img;\n            this.setState({imgs: [...this.state.imgs, obj]})\n        });\n        this.setState({loading: false})\n    }\n\n    render() {\n        const col = this.state.width > 700 ? 3 : 2;\n        const gallery = this.state.loading ?\n            <Container style={{height: 400}} className='text-center align-middle my-5 Gallery'>\n                <Spinner animation=\"border\" role=\"status\"/>\n            </Container>\n            :\n            <div className='d-flex justify-content-around overflow-hidden Gallery'>\n                <GridList className='m-lg-5 p-lg-3 m-sm-2 p-sm-2 m-2 p-2' cellHeight={Math.floor(this.state.width / col)} cols={col}>\n                    {this.state.imgs.map(img => (\n                        <GridListTile key={img.key} cols={img.cols || 1}>\n                            <img src={img.img}/>\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>;\n\n        return (\n            <React.Fragment>\n                <CustomParallax title='Gallery' img={home_top} height={300}/>\n                {gallery}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nclass MenuItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth\n        };\n        window.addEventListener(\"resize\", () => {\n            this.setState({width: window.innerWidth});\n        });\n    }\n\n    render() {\n        const className = (this.state.width > 992 ? 'border-right' : 'border-bottom') + ' px-md-5 px-4';\n        return (\n            <Col key={this.props.title} lg={4} className={className}>\n                <Row>\n                    <h5 className='text-capitalize mr-auto'>{this.props.title}</h5>\n                    <h5>${this.props.price}</h5>\n                </Row>\n                <Row>\n                    <p>{this.props.description}</p>\n                </Row>\n            </Col>\n        );\n    }\n}\n\nexport default MenuItem;","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport MenuItem from \"./MenuItem\";\nimport {connect} from \"react-redux\";\n\nfunction Menu(props) {\n    const menuItemRender = (item) => <MenuItem title={item.title} price={item.price} description={item.description}/>;\n\n    return (\n        <Container className='pb-4' style={{background: 'dark'}}>\n            <h1 className=''>Appetizers</h1>\n            <Row className='my-4'>\n                {Object.values(props.items).map(item =>\n                    (item.meal === 'appetizer') && menuItemRender(item)\n                )}\n            </Row>\n\n            <Row/>\n\n            <h1 className='mt-4'>Main Course</h1>\n            <Row className='my-4'>\n                {Object.values(props.items).map(item =>\n                    (item.meal === 'main') && menuItemRender(item)\n                )}\n            </Row>\n\n            <Row/>\n\n            <h1 className=''>deserts</h1>\n            <Row className='my-4'>\n                {Object.values(props.items).map(item =>\n                    (item.meal === 'desert') && menuItemRender(item)\n                )}\n            </Row>\n        </Container>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items,\n    }\n};\n\nexport default connect(mapStateToProps)(Menu)","import React, { Component } from 'react';\nimport CustomParallax from \"../../components/CustomParallax\";\nimport menu_top from \"../../assets/menu_top.jpg\";\nimport Menu from \"../../components/Menu\";\n\nclass Evening extends Component {\n    render() {\n        return (\n            <div>\n                <CustomParallax title='Evening Menu' img={menu_top} height={300}/>\n                <Menu/>\n            </div>\n        );\n    }\n}\n\nexport default Evening;","import React, { Component } from 'react';\nimport CustomParallax from \"../../components/CustomParallax\";\nimport menu_top from \"../../assets/menu_top.jpg\";\nimport Menu from \"../../components/Menu\";\n\nclass Lunch extends Component {\n    render() {\n        return (\n            <div>\n                <CustomParallax title='Lunch Menu' img={menu_top} height={300}/>\n                <Menu/>\n            </div>\n        );\n    }\n}\n\nexport default Lunch;\n","import React, {Component} from 'react';\nimport Image from \"react-bootstrap/Image\";\nimport CustomButtonGroup from \"./CustomButtonGroup\";\nimport {connect} from \"react-redux\";\nimport {FiTrash2} from \"react-icons/fi\";\nimport {Zero} from \"../redux/actions/cartActions\";\nimport { postItemsUpdate } from \"../utils/api\";\nimport {round} from \"../utils/functions\";\n\nclass CartTableItem extends Component {\n    handleZero = async () => {\n        this.props.Zero(this.props.title);\n        if (this.props.loggedIn) {\n            await postItemsUpdate(this.props.email, this.props.title, 'ZERO')\n        }\n    };\n\n    render() {\n        return (\n            <tr className='text-center'>\n                <td className='align-middle'>\n                    <FiTrash2 className='mr-2 shadow-sm' size='1.2em' onClick={this.handleZero}/>\n                </td>\n                <td className='align-middle'>\n                    <Image style={{height: 110, width: 110}}\n                           src={this.props.img} rounded/>\n                </td>\n                <td className='align-middle'>{this.props.title}</td>\n                <td className='align-middle'>${this.props.price}</td>\n                <td className='align-middle'><CustomButtonGroup title={this.props.title} num={this.props.num}/></td>\n                <td className='align-middle'>${round(this.props.price * this.props.num)}</td>\n            </tr>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        Zero: (title) => {\n            dispatch(Zero(title))\n        }\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.user.loggedIn,\n        email: state.user.email\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTableItem);","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CartTotalsCart(props) {\n        return (\n            <div>\n                <h4 className='text-uppercase my-auto'>Cart Totals</h4>\n                <Card className='mt-3'>\n                    <Card.Header className='pl-2 font-weight-bold'>\n                        {props.total} Products\n                    </Card.Header>\n                    <Card.Body className='d-flex justify-content-between p-2 mt-3'>\n                        <Card.Text>\n                            Products Price\n                        </Card.Text>\n                        <Card.Text>\n                            ${props.totalPrice}\n                        </Card.Text>\n                    </Card.Body>\n\n                    <Card.Body className='d-flex justify-content-between p-2'>\n                        <Card.Text>\n                            Delivery\n                        </Card.Text>\n                        <Card.Text>\n                            ${3.50}\n                        </Card.Text>\n                    </Card.Body>\n\n                    <Card.Body className='d-flex justify-content-between p-2'>\n                        <Card.Text>\n                            Total\n                        </Card.Text>\n                        <Card.Text>\n                            ${props.totalPrice + 3.50}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Link to='checkout'>\n                            <Button variant='warning' block disabled={props.disabled}>\n                                {props.buttonText}\n                            </Button>\n                        </Link>\n                        <hr/>\n\n                        <h6 className='mt-3'>\n                            WE ACCEPT:\n                            <Image className=\"img-thumbnail mt-1\" src=\"https://assets.asosservices.com/asos-finance/images/marketing/single.png\"\n                                   alt=\"payment options\"/>\n                        </h6>\n                        <p style={{fontSize: '0.8em'}}>\n                            Got a coupon code? Add it in the next step\n                        </p>\n                    </Card.Footer>\n                </Card>\n            </div>\n        );\n}","import React from 'react';\nimport CustomParallax from \"../components/CustomParallax\";\nimport home_top from \"../assets/home_top.jpg\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport CartTableItem from \"../components/CartTableItem\";\nimport {connect} from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\nimport {Link} from \"react-router-dom\";\nimport CartTotalsCart from \"../components/CartTotalsCart\";\nimport {round} from \"../utils/functions\";\n\nfunction Cart(props) {\n    const cartTableItemRender = (title) => <CartTableItem img={props.items[title].img} title={props.items[title].title}\n                                                          price={props.items[title].price} num={props.items[title].num}/>;\n\n    const full = <Row>\n        <Col xs={12} lg={8}>\n            <div className='d-flex'>\n                <h4 className='text-uppercase mr-2 my-auto'>My Cart</h4>\n                <p className='my-auto'>({props.total} Products)</p>\n            </div>\n            <Table className='mt-3' responsive>\n                <thead>\n                <tr className='text-center'>\n                    <th/>\n                    <th>Image</th>\n                    <th>Product</th>\n                    <th>Unit Price</th>\n                    <th>Quantity</th>\n                    <th>Total Price</th>\n                </tr>\n                </thead>\n                <tbody>\n                {Object.keys(props.items).map(title =>\n                    (props.items[title].num > 0) && cartTableItemRender(title)\n                )}\n                </tbody>\n            </Table>\n        </Col>\n\n        <Col className='ml-lg-5 pl-lg-2 mt-4 mt-lg-0' xs={12} lg={3}>\n            <CartTotalsCart disabled={false} buttonText='Checkout' total={props.total} totalPrice={round(props.totalPrice)}/>\n        </Col>\n    </Row>;\n    const empty = <div className='text-center'>\n        <h2>\n            Your cart is currently empty...\n        </h2>\n        <Link to='delivery'>\n            <Button variant='warning' className='mt-4'>\n                Back to Deliveries\n            </Button>\n        </Link>\n    </div>;\n\n    return (\n        <React.Fragment>\n            <CustomParallax title='Cart' img={home_top} height={300}/>\n            <Container className='my-auto Cart'>\n                {props.total > 0 ? (full) : (empty)}\n            </Container>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items,\n        total: state.cart.total,\n        totalPrice: state.cart.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(Cart)","import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Link} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport {userLogin} from \"../redux/actions/userActions\";\nimport {getLogin} from \"../utils/api\";\nimport {connect} from \"react-redux\";\nimport {Set, Reset} from \"../redux/actions/cartActions\";\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        remember: false,\n    };\n\n    validateForm() {\n        return !(this.state.email.length > 0 && this.state.password.length > 0);\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.id]: e.target.value});\n    };\n\n    handleCheckbox = e => {\n        this.setState({\n            remember: e.target.checked\n        });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let res = await getLogin(this.state.email.toLowerCase(), this.state.password, this.state.remember);\n        if (res) {\n            this.props.history.push('');\n            this.props.userLogin(res.data.user);\n            this.props.Reset();\n            this.setItemsNum(res.data.currentItems);\n        } else {\n            this.setState({\n                password: '',\n                remember: false\n            });\n        }\n    };\n\n    setItemsNum(items) {\n        Object.keys(items).forEach((item) => {\n                this.props.Set(item, items[item])\n            }\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container className=\"mt-5 pt-3 Login\">\n                    <Row>\n                        <Col xs={6} className='border-right'>\n                            <h3 className='text-center text-uppercase font-weight-bold'>\n                                Login\n                            </h3>\n                            <Form onSubmit={this.handleSubmit} className='mt-4'>\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email/Username</Form.Label>\n                                    <Form.Control placeholder=\"Email/Username\" autoFocus required value={this.state.email}\n                                                  onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\n                                                  onChange={this.handleChange} required/>\n                                </Form.Group>\n                                <Form.Group controlId=\"remember\">\n                                    <Form.Check type=\"checkbox\" label=\"Remember me\" onChange={this.handleCheckbox}/>\n                                </Form.Group>\n                                <Button block variant=\"dark\" type=\"submit\" disabled={this.validateForm()}>\n                                    Login\n                                </Button>\n                            </Form>\n\n                        </Col>\n\n                        <Col xs={6}>\n                            <h3 className='text-center text-uppercase font-weight-bold '>\n                                New Customer?\n                            </h3>\n                            <Link to='signup'>\n                                <Form.Label/>\n                                <Button block variant='warning' bsSize=\"large\" className='mt-4'>\n                                    Signup\n                                </Button>\n                            </Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogin: (data) => {\n            dispatch(userLogin(data))\n        },\n        Set: (title, num) => {\n            dispatch(Set(title, num))\n        },\n        Reset: () => {\n            dispatch(Reset())\n        }\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport {userSignup} from \"../redux/actions/userActions\";\nimport {connect} from \"react-redux\";\nimport {postSignup} from \"../utils/api\";\n\nclass Signup extends Component {\n    state = {\n        agree: false,\n        firstName: '',\n        lastName: '',\n        address: '',\n        city: '',\n        country: '',\n        houseNum: '',\n        email: '',\n        password: '',\n    };\n\n    validateForm() {\n        return !(this.state.agree && this.state.firstName.length > 0 && this.state.lastName.length > 0 && this.state.address.length > 0 && this.state.city.length > 0 && this.state.country.length > 0 && this.state.houseNum.length > 0 && this.state.email.length > 0 && this.state.password.length > 0);\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.id]: e.target.value});\n    };\n\n    handleCheckbox = e => {\n        this.setState({\n            agree: e.target.checked\n        });\n    };\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        await this.setState({email: this.state.email.toLowerCase()});\n        let res = await postSignup(this.state);\n        if (res) {\n            this.props.userSignup(this.state);\n            this.props.history.push('');\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container className=\"my-5 pb-3 Signup\">\n                    <h2 className='text-uppercase text-center font-weight-bold'>Signup</h2>\n                    <Form onSubmit={this.handleSubmit} className='my-4'>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"firstName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control onChange={this.handleChange} autoFocus placeholder=\"First Name\" required/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"lastName\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control onChange={this.handleChange} placeholder=\"Last Name\" required/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control onChange={this.handleChange} type='email' placeholder=\"Email\" required/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control onChange={this.handleChange} type='password' placeholder=\"Password\" required/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control onChange={this.handleChange} placeholder=\"1234 Main St\" required/>\n                        </Form.Group>\n\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"country\">\n                                <Form.Label>Country</Form.Label>\n                                <Form.Control onChange={this.handleChange} as=\"select\" required>\n                                    <option disabled selected>Choose...</option>\n                                    <option>Australia</option>\n                                    <option>United States</option>\n                                    <option>United Kingdom</option>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"city\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control onChange={this.handleChange} placeholder=\"City\" required/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"houseNum\">\n                                <Form.Label>House Number</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"House Number\" required/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"zip\">\n                                <Form.Label>Zip</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"Zip\" required/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group className='d-flex justify-content-center'>\n                            <Form.Check onChange={this.handleCheckbox} id=\"checkbox\" type=\"checkbox\" required/>\n                            <label>I agree to\n                                <Link to='terms'> terms of service</Link>\n                            </label>\n                        </Form.Group>\n\n                        <Button block variant=\"warning\" type=\"submit\" disabled={this.validateForm()}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userSignup: (data) => {\n            dispatch(userSignup(data))\n        }\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(Signup);","import React from 'react';\nimport CustomParallax from \"../components/CustomParallax\";\nimport menu_top from \"../assets/menu_top.jpg\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default function Terms() {\n    return (\n        <div>\n            <CustomParallax title='Terms of Service' img={menu_top} height={300}/>\n            <Container>\n                <div className=\"cell-wrapper layout-widget-wrapper\">\n                    <span id=\"hs_cos_wrapper_left_column\" className=\"hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_rich_text\" style={{}}\n                          data-hs-cos-general-type=\"widget\" data-hs-cos-type=\"rich_text\">\n                    <h3 className='text-center' style={{textAlign: 'left', fontWeight: 'normal', fontFamily: 'Roboto'}}>TERMS OF USE</h3>\n                    <h3 className='text-center' style={{textAlign: 'left', fontWeight: 'normal', fontFamily: 'Roboto'}}>INDEPENDENT CONTRACTOR SERVICES AGREEMENT</h3>\n                    <p className='text-center' style={{textAlign: 'left'}}>Updated: August 7, 2019<br/>\n                    Sections: 2.1</p>\n                    <p style={{textAlign: 'left'}}>The Namaste Restaurant Mobile Application is an internet application (“Namaste Restaurant Mobile Application” or the “Application”) owned and operated by Namaste Restaurant (“Namaste Restaurant,” “we,” or “us”). Namaste Restaurant provides a service (the “Service”) that allows its customers (“Customers”) to access Namaste Restaurant’s network of contractors (“Namaste Restauranters” or “you” or “Contractor”) to identify local providers to meet intermittent needs for services. The Namaste Restauranters have access to the Application to receive and review requests for services from Customers and to determine their interest in and availability to respond to such requests.</p>\n                    <p style={{textAlign: 'left'}}><strong>PLEASE READ THIS AGREEMENT CAREFULLY. THIS AGREEMENT CONTAINS A MANDATORY INDIVIDUAL ARBITRATION AND CLASS ACTION WAIVER PROVISION THAT REQUIRES THE USE OF ARBITRATION ON AN INDIVIDUAL BASIS TO RESOLVE COVERED DISPUTES, RATHER THAN JUDGE OR JURY TRIALS.</strong></p>\n                    <p style={{textAlign: 'left'}}><strong>Acknowledgment and Acceptance of Independent Contractor Services Agreement</strong></p>\n                    <p style={{textAlign: 'left'}}>This Terms of Use Independent Contractor Services Agreement (“Terms of Use” or “Agreement”) is an electronic contract that sets out the legally binding terms of the relationship between Namaste Restaurant and you. By registering to become a Namaste Restauranter, you accept and agree to be bound by the terms of this Agreement. Please read it carefully. By accessing the Application, or becoming a Namaste Restauranter, you accept this Agreement and agree to the terms, conditions and notices contained and/or referenced herein.</p>\n                    <p style={{textAlign: 'left'}}>Namaste Restaurant reserves the right to change this Agreement, and add additional terms at any time, effective upon making the modified provisions available on the Application or by notifying Namaste Restauranters directly. You are responsible for regularly reviewing the Terms of Use for modifications and updates to its terms. Continued use of the Application after any such changes are made to this Agreement shall constitute your consent to such changes. Other than making the changes available on the Application, Namaste Restaurant does not assume any obligation to notify Namaste Restauranters of any changes to this Agreement, or the creation or modification of any additional terms.</p>\n                    <p style={{textAlign: 'left'}}><strong>Notwithstanding the previous paragraph or any contrary language in this Agreement, the Arbitration Agreement in Section 9 of this Agreement may not be modified or terminated absent a writing signed (electronically or otherwise) by the Company and You.</strong></p>\n                    <p style={{textAlign: 'left'}}>You acknowledge that you are able to electronically receive, download, and print this Agreement, any other terms, notices, forms (including IRS Form 1099-MISC) and any other notices or documents required by, or incorporated into, this Agreement by reference, any amendments to this Agreement, or any other items required by regulation or law. Further, you agree to keep the contact information in your Account current at all times including, but not limited to, your email address, physical address, and phone number.</p>\n                    <p style={{textAlign: 'left'}}>Use of the Application is permitted only by individuals who can form legally binding contracts under applicable law. Without limiting the foregoing, you must be at least 18 years old [or the age of legal majority in the jurisdiction in which you work] and legally authorized to work in the United States to become a Namaste Restauranter. If you do not meet these criteria, you may not register to become a Namaste Restauranter.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>1. &nbsp;DEFINITIONS</h3>\n                    <p style={{textAlign: 'left'}}>Capitalized terms are defined as set forth below or elsewhere in the Agreement.</p>\n                    <p style={{textAlign: 'left'}}><strong>1.1</strong>&nbsp;&nbsp;<strong>“Services”</strong>&nbsp;means the services described in a Namaste Restaurant Request for services by a Namaste Restauranter to a Namaste Restaurant Customer.</p>\n                    <p style={{textAlign: 'left'}}><strong>1.2</strong>&nbsp;&nbsp;<strong>“Namaste Restaurant Request</strong>” means a notice provided, through the Application, to one or more Namaste Restauranters, which includes a description of the services to be provided by the Namaste Restauranters, the time by which the Namaste Restaurant Request must be completed (the “Namaste Restaurant Completion Date”) and the fee associated with the Namaste Restaurant Request (the “Payment”). An open request is a request for services that has not yet been accepted by a Namaste Restauranter (“Open Request”). Namaste Restauranters can use the Application to review Open Requests and to indicate their availability for Open Requests. Once a Namaste Restauranter has accepted a Namaste Restaurant Request pursuant to Section 2, the Namaste Restaurant Request will become a “Namaste Restaurant Engagement”. Each Namaste Restaurant Engagement constitutes a new contract between Namaste Restaurant and the Namaste Restauranter, and between the Namaste Restauranter and Requestor.</p>\n                    <p style={{textAlign: 'left'}}><strong>1.3</strong>&nbsp;&nbsp;“<strong>Namaste Restaurant Mobile Application</strong>” or <strong>“Application” </strong>means the software application used by Namaste Restaurant in connection with the Services.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>2. &nbsp;Namaste RestaurantERS</strong></h3>\n                    <p style={{textAlign: 'left'}}><strong>2.1 </strong><strong>Customer Conditional Offer Requirements and Privacy Information.</strong>&nbsp; Some customers may require completion of certain steps or requirements after you accept a Namaste Restaurant Request before you perform the Namaste Restaurant Request (“Conditional Offer Requirements”).&nbsp; Any Conditional Offer Requirements will be explained after you accept the Namaste Restaurant Request.&nbsp; Failure to complete such Conditional Offer Requirements to the satisfaction of the Customer will result in your inability to perform accepted Namaste Restaurant Requests.&nbsp; Please note that some of the Conditional Offer Requirements will require Namaste Restaurant or a designated third-party provider to ask for your social security number and share it with entities who require the information to facilitate the Conditional Offer Requirements.&nbsp; Namaste Restaurant may also share your social security number with our payment vendor, Stripe, in order to verify your payment account to ensure the safety of your account.</p>\n                    <p style={{textAlign: 'left'}}><strong>2.2 Best Efforts.</strong> By registering to become a Namaste Restauranter and accepting an Open Request, you agree to use your best efforts to perform the Namaste Restaurant Engagement such that the Services meet the requirements and specifications of the Customer, for whom the Open Request was created. Once a Namaste Restauranter has accepted a Namaste Restaurant Request, the Open Request will no longer be available for performance by other Namaste Restauranters who received the Open Request. By accepting an Open Request, you are entering into a binding legal agreement to provide the Services for the Payment specified in the Open Request. Do not accept an Open Request unless you are sure that:&nbsp; (1) you understand what you are being asked to deliver; (2) you can perform the Services identified in the Open Request; (3) you can deliver the Services in the requested time period; and if required, you can get to and from the Customer’s location. Failure to timely deliver the Services consistent with the Customer’s requirements and specifications will constitute a breach, resulting in non-payment. Further, in the event of such a breach, you will be responsible for payment of any additional fees (e.g., rush fees) or costs incurred as a result of your failure to timely complete the Open Request in accordance with the Customer requirements. You agree to not possess, sell, receive, or operate under the influence of any drugs or alcohol while performing any Namaste Restaurant Engagement.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>3. &nbsp;INDEPENDENT CONTRACTOR RELATIONSHIP</strong></h3>\n                    <p style={{textAlign: 'left'}}>Nothing in this Agreement is intended or should be construed to create a partnership, joint venture, or employer-employee relationship between Namaste Restaurant and you or between the Customer and you. You will take no position with respect to or on any tax return or application for benefits, or in any proceeding directly or indirectly involving Namaste Restaurant that is inconsistent with your being an independent contractor (and not an employee) of Namaste Restaurant. You are not the agent of Namaste Restaurant or the Customer and you are not authorized, and must not represent to any third party that you are authorized, to make any commitment or otherwise act on behalf of Namaste Restaurant or the Customer.</p>\n                    <p style={{textAlign: 'left'}}>As an independent contractor, you are solely responsible for determining which Open Requests you will choose to accept and how, when and where you will provide the Services under this Agreement.</p>\n                    <p>Namaste Restaurant does not restrict the Namaste Restauranter’s right to provide services through other parties, including competitors of the Namaste Restaurant Mobile Application; Namaste Restaurant expects the individual performing services as a Namaste Restauranter will provide services for other parties;</p>\n                    <p>Namaste Restauranter acknowledges and represents Namaste Restauranter can earn income from other sources; Namaste Restaurant does not guarantee the Namaste Restauranter any minimum amount of Namaste Restaurant Engagements;</p>\n                    <p>Namaste Restaurant does not provide a performance assessment for Namaste Restauranters, and does not oversee the actual work or instruct the individual as to how the work will be performed, or the method or process the Namaste Restauranter uses to perform services;</p>\n                    <p>Namaste Restaurant does not pay a salary or hourly rate but rather facilitates Requestor’s payment of the rate set by the Requestor;</p>\n                    <p>Namaste Restaurant does not terminate the work during the term of this Agreement unless the Namaste Restauranter violates the terms of this Agreement or fails to produce a result that meets the specifications of the Agreement;</p>\n                    <p>Namaste Restaurant does not provide training, tools, equipment, benefits, or expense reimbursement to the Namaste Restauranter;</p>\n                    <p>Namaste Restaurant does not dictate the time of performance;</p>\n                    <p>Namaste Restaurant does not combine its business operations in any way with the Namaste Restauranter’s business, but instead maintains such operations as separate and distinct. Namaste Restauranter shall have no legal authority to enter into contracts on Namaste Restaurant’s behalf or otherwise bind Namaste Restaurant in any way.</p>\n                    <p>Namaste Restauranter is responsible for obtaining and maintaining any required registration, licenses, or other authorization necessary for the services Namaste Restauranter renders.</p>\n                    <p>For purposes of New York City Local Law 140 only, to the extent it is deemed to apply, the “value” of the services performed pursuant to this Agreement is equal to the total amount paid by the Requestor for each service.</p>\n                    <p style={{textAlign: 'left'}}>Without limiting the generality of the foregoing:</p>\n                    <p style={{textAlign: 'left'}}><strong>3.1</strong>&nbsp;&nbsp;<strong>Benefits and Contributions.</strong>&nbsp;You are not entitled to or eligible for any benefits that Namaste Restaurant, its parents, subsidiaries, affiliates or other related entities may make available to its employees, such as group insurance, profit-sharing or retirement benefits. Because you are an independent contractor, Namaste Restaurant will not withhold or make payments for social security, make unemployment insurance or disability insurance contributions, or obtain workers’ compensation insurance on your behalf. If, notwithstanding the foregoing, you are reclassified as an employee of Namaste Restaurant, or any affiliate of Namaste Restaurant (“Affiliate”), by the U.S. Internal Revenue Service (“IRS”), the U.S. Department of Labor (“DOL”), or any other federal, state or foreign court or agency, you agree that you will not, as the result of such reclassification, be entitled to or eligible for, on either a prospective or retrospective basis, any employee benefits under any plans or programs established or maintained by either the Customer and its parents, subsidiaries, affiliates or related entities or by Namaste Restaurant, its parents, subsidiaries, affiliates or other related entities.</p>\n                    <p style={{textAlign: 'left'}}><strong>3.2</strong>&nbsp;&nbsp;<strong>Taxes.</strong> You are solely responsible for filing all tax returns and submitting all payments as required by any federal, state, local, or foreign tax authority arising from the payment of Payments to you under this Agreement, and you agree to do so in a timely manner. You will comply with all applicable federal, state, local, and foreign laws governing self-employed individuals, including laws requiring the payment of taxes, such as income and employment taxes, and social security, disability and other contributions. To the extent required by the IRS, Namaste Restaurant will report the Payments paid to you for services rendered as part of Namaste Restaurant engagements by filing Form 1099-MISC with IRS. You consent to electronic delivery of Form 1099-MISC, if such form is required or filed. You agree to indemnify Namaste Restaurant for the cost of any tax liabilities incurred by Namaste Restaurant as a result of your failure to pay all applicable taxes in a timely manner.</p>\n                    <p style={{textAlign: 'left'}}><strong>3.3 &nbsp;Third Party Payment Processing Services.</strong>&nbsp;Payment processing services for Namaste Restauranters are provided by Stripe and are subject to the&nbsp;\n                        <a href=\"https://stripe.com/connect-account/legal\">Stripe Connected Account Agreement</a>, which includes the&nbsp;<a\n                            href=\"https://stripe.com/US/legal\">Stripe Terms of Service</a> (collectively, the “Stripe Services Agreement”). These documents can be found at the provided links or by using a search engine (such as Google or Bing) to seek the terms “Stripe Connected Account Agreement” or “Stripe Terms of Service,” respectively.” By agreeing to these terms or continuing to operate as a Namaste Restauranter on Namaste Restauranter, you agree to be bound by the Stripe Services Agreement, as the same may be modified by Stripe from time to time. As a condition of Namaste Restaurant enabling payment processing services through Stripe, you agree to provide Namaste Restaurant accurate and complete information about you and your business, and you authorize Namaste Restaurant to share it and transaction information related to your use of the payment processing services provided by Stripe.</p>\n                    <p style={{textAlign: 'left'}}><strong>3.4&nbsp; On-Demand Independent Contractors Association Membership Enrollment.</strong> By agreeing to this Membership Enrollment Application, I understand I am agreeing to enroll in the On-Demand Independent Contractors Association (ODICA) and I am also agreeing to abide by the Bylaws of ODICA, as amended from time to time.</p>\n                    <p style={{textAlign: 'left'}}>Membership in ODICA is non-transferable and only one membership in ODICA is allowed per eligible person. A member may cancel his or her membership within thirty (30) days from the date you join ODICA, by sending a cancellation letter with your name and membership number to Member Services. ODICA bylaws are available upon request. Nothing herein creates the relationship of employer-employee between member and ODICA. Members of ODICA have access to certain benefits and/or products offered by ODICA, or sponsored by ODICA, Benefits and/or products are offered at the sole discretion of ODICA, and may vary by availability, vendor or the member’s state of residence. ODICA may change vendors or immediately terminate the benefits and/or products offered without prior notice to members. Termination of membership in ODICA will result in the loss of such benefits and/or products. By signing this form you authorize ODICA to share your information with such third-party vendors on an as needed basis only.</p>\n                    <p style={{textAlign: 'left'}}>Non-Voting Membership: By signing this form, I understand that I am enrolling as a non-dues-paying member of ODICA with no voting rights. I hereby state that I certify to the best of my knowledge and belief that all information on this form is complete and truthful and I am 18 years of age or older. Membership in ODICA is effective the first day of the month in which the member enrolls.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>4. &nbsp;CONFIDENTIALITY</strong></h3>\n                    <p style={{textAlign: 'left'}}><strong>4.1&nbsp;&nbsp;Use and Disclosure.</strong>&nbsp;From time to time, you may be given access to confidential information in the course of performing engagements that you receive through Namaste Restaurant. During the term of this Agreement and at all times thereafter, you will (a) hold all Confidential Information in strict trust and confidence, (b) refrain from using or permitting others to use Confidential Information in any manner or for any purpose not expressly permitted or required by this Agreement, and (c) refrain from disclosing or permitting others to disclose any Confidential Information to any third party without obtaining Namaste Restaurant’s express prior written consent on a case-by-case basis. “Confidential Information” means any and all information related to Namaste Restaurant’s or any Customer’s business (including trade secrets, technical information, business forecasts and strategies, marketing plans, customer and supplier lists, personnel information, financial data, and proprietary information of third parties including Customers) that Namaste Restaurant and/or the Customer considers to be confidential or proprietary or which Namaste Restaurant has a duty to treat as confidential.</p>\n                    <p style={{textAlign: 'left'}}><strong>4.2&nbsp;&nbsp;Standard of Care.</strong> You will protect the Confidential Information from unauthorized use, access, or disclosure in the same manner as you protect your own confidential or proprietary information of a similar nature, and with no less than reasonable care. You <span\n                        style={{fontWeight: 400}}>agree that you will comply with the terms of the Namaste Restaurant <a\n                        href=\"https://www.Namaste Restaurant.com/acceptable-use-policy/\">Acceptable Use Policy</a> with respect to your use of the Service (including the Namaste Restaurant Platform) which can be found at</span>www.Namaste Restaurant.com/acceptable-use-policy/ . Further, you <span\n                        style={{fontWeight: 400}}>agree that you will comply with the terms of the Namaste Restaurant <a\n                        href=\"https://www.Namaste Restaurant.com/privacy/\">Privacy Policy</a> with respect to your use of the Service (including the Namaste Restaurant Platform) which can be found at</span> www.Namaste Restaurant.com/privacy/ .</p>\n                    <p style={{textAlign: 'left'}}><strong>4.3&nbsp;&nbsp;Exceptions.</strong>&nbsp;Your obligations under Sections 4.1 and 4.2 will terminate with respect to any particular information that you can prove, by clear and convincing evidence, (a) you lawfully knew prior to Namaste Restaurant’s first disclosure to you, (b) a third party rightfully disclosed to you free of any confidentiality duties or obligations, or (c) is, or through no fault of you has become, generally available to the public. Additionally, you will be permitted to disclose Confidential Information to the extent that such disclosure is expressly approved in writing by Namaste Restaurant, or is required by law or court order, provided that you immediately notify Namaste Restaurant in writing of such required disclosure and cooperate with Namaste Restaurant, at Namaste Restaurant’s reasonable request and expense, in any lawful action to contest or limit the scope of such required disclosure, including filing motions and otherwise making appearances before a court.</p>\n                    <p style={{textAlign: 'left'}}><strong>4.4&nbsp;&nbsp;Removal; Return.</strong>&nbsp;Upon Namaste Restaurant’s request and upon any termination or expiration of this Agreement, you will promptly (a) return to Namaste Restaurant or, if so directed by Namaste Restaurant, destroy all Confidential Information (in every form and medium), (b) permanently erase all electronic files containing or summarizing any Confidential Information, and (c) certify to Namaste Restaurant in writing that you have fully complied with these obligations.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>5. &nbsp;NO CONFLICTS</strong></h3>\n                    <p style={{textAlign: 'left'}}>You represent and warrant that you are not subject to any contract or duty that would be breached by entering into or performing your obligations under this Agreement, or any Namaste Restaurant Engagement, or that is otherwise inconsistent with this Agreement or any Namaste Restaurant Engagement.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>6. &nbsp;REPRESENTATIONS AND WARRANTIES</strong></h3>\n                    <p style={{textAlign: 'left'}}><strong>6.1&nbsp;&nbsp;General.&nbsp;</strong>You represent, warrant, and covenant that:</p>\n                    <p style={{textAlign: 'left'}}>(a)&nbsp;&nbsp;You have full right, power, and authority to enter into and perform under this Agreement without the consent of any third party (including any of your current or former employers);</p>\n                    <p style={{textAlign: 'left'}}>(b)&nbsp;&nbsp;You will comply with all of the terms of this Agreement;</p>\n                    <p style={{textAlign: 'left'}}>(c)&nbsp; You will fully conform to the Customer specifications, requirements, and other terms of any Namaste Restaurant Request that you accept, and the Services delivered will be of a professional and workmanlike quality;</p>\n                    <p style={{textAlign: 'left'}}>(d) You will comply with all applicable laws, rules and regulations in connection with performance of the Services under this Agreement;</p>\n                    <p style={{textAlign: 'left'}}>(e) Any workers that you may employ, engage or otherwise retain to assist with performance of Services under this Agreement are properly classified and treated under any applicable laws and will assist with the performance of Services in a safe, lawful and workmanlike manner.</p>\n                    <p>(f) You are not providing and will not provide labor or services to Namaste Restaurant for remuneration, but rather, you can use the Application to find and, if you wish, accept Namaste Restaurant Requests posted by <span\n                        className=\"gmail_default\">Customers</span>.</p>\n                    <p>(g) You will at all points remain free from the control and direction of Namaste Restaurant in connection with your use of the Application and the Service, including during your consideration and acceptance of any Namaste Restaurant Requests and during the performance of any Namaste Restaurant Engagements.</p>\n                    <p>(h) You recognize that Namaste Restaurant is an on-demand software-driven staffing platform and agree that Namaste Restaurant Requests posted by Customers are for work that is outside the usual course of Namaste Restaurant’s business.</p>\n                    <p style={{textAlign: 'left'}}><strong>6.2.&nbsp;&nbsp;Indemnification. </strong>You will indemnify and hold harmless Namaste Restaurant and its parents, affiliates, employees, and agents from and against any and all liabilities, losses, damages, costs, and other expenses (including attorney fees and costs associated with litigation) arising from or relating to a breach by you of any representation, warranty, covenant, or obligation in this Agreement, or arising from or relating to any negligent or intentional act or omission committed by you, in connection with the performance of any Namaste Restaurant engagement, which act or omission gives rise to any claim for damages against you, Namaste Restaurant and/or its parents, affiliates, employees or agents. Namaste Restaurant specifically denies any obligation to defend and/or indemnify you from and against any third party claims made against you arising from any negligent or intentional act or omission committed by you in connection with the performance of any Namaste Restaurant engagement.</p>\n                    <p style={{textAlign: 'left'}}><strong>6.3&nbsp;&nbsp;Insurance.&nbsp;</strong>You acknowledge that you are an independent contractor, not an employee of Namaste Restaurant. As such, you acknowledge and understand that you are not covered by any insurance that may be provided by Namaste Restaurant to its employees, including, without limitation, health insurance, workers compensation insurance, general liability insurance, and automobile liability insurance. Namaste Restaurant requires that, as an independent contractor, you maintain workers’ compensation or occupational accident insurance for which you are solely and exclusively responsible for. Specifically, in the event that you are injured while working in the course and scope of an engagement for Namaste Restaurant, you acknowledge and understand that you will not be covered by any workers compensation insurance coverage that Namaste Restaurant may provide to its employees. Further, in the event that your actions cause an injury to a third party while you are working in the course and scope of performing a Namaste Restaurant Engagement or the Services, you acknowledge and understand that you will not be covered by any general liability or automobile liability insurance coverage that Namaste Restaurant may have, and that Namaste Restaurant is not making any commitment to defend and/or indemnify you in such circumstances, and specifically denies such obligation. <strong>If you do not provide proof of workers’ compensation or occupational accident insurance, you will be charged a Trust and Safety Fee that will be paid towards Namaste Restaurant’s supplemental occupational accident insurance.</strong> By agreeing to these Terms, you are agreeing to pay this fee.</p>\n                    <p style={{textAlign: 'left'}}><strong>6.4&nbsp;&nbsp;Warranty Disclaimer.</strong> The Application is provided “as is,” as available and without any warranties or conditions (express or implied, including the implied warranties of merchantability, accuracy, fitness for a particular purpose, title and non-infringement, arising by statute or otherwise in law or from a course of dealing or usage or trade). We disclaim all and make no representations or warranties, of any kind, either express or implied, as to the quality, identity or reliability of any third party, or as to the accuracy of the postings made on the Application by any third party. Some states and jurisdictions do not allow for all the foregoing limitations on implied warranties, so to that extent, if any, some or all of the above limitations may not apply to you.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>7. &nbsp;LIMITATION OF LIABILITY</strong></h3>\n                    <p style={{textAlign: 'left'}}>IN NO EVENT WILL Namaste Restaurant BE LIABLE FOR ANY CONSEQUENTIAL, INDIRECT, EXEMPLARY, SPECIAL, INCIDENTAL OR PUNITIVE DAMAGES ARISING FROM OR RELATING TO THIS AGREEMENT, INCLUDING BUT NOT LIMITED TO LOSS OF PROFITS, LOSS OF BUSINESS OPPORTUNITIES OR LOSS OF GOODWILL, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. Namaste Restaurant’S TOTAL CUMULATIVE LIABILITY IN CONNECTION WITH THIS AGREEMENT, WHETHER IN CONTRACT OR TORT OR OTHERWISE, WILL NOT EXCEED THE AGGREGATE AMOUNT OF PAYMENTS OWED BY Namaste Restaurant FOR Namaste Restaurant ENGAGEMENTS PERFORMED UNDER THIS AGREEMENT DURING THE TWELVE-MONTH PERIOD PRIOR TO THE OCCURRENCE OF THE FIRST CLAIM TO GIVE RISE TO LIABILITY UNDER THIS AGREEMENT.</p>\n                    <p style={{textAlign: 'left'}}>SOME STATES AND JURISDICTIONS DO NOT ALLOW FOR ALL OF THE FOREGOING EXCLUSIONS AND LIMITATIONS OF CERTAIN TYPES OF DAMAGES, SO TO THAT EXTENT, IF ANY, SOME OR ALL OF THESE LIMITATIONS AND EXCLUSIONS MAY NOT APPLY TO YOU.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>8. &nbsp;TERM &amp; TERMINATION</strong></h3>\n                    <p style={{textAlign: 'left'}}><strong>8.1&nbsp; Term; Termination by Namaste Restaurant. </strong>This Agreement is for a term of 60 days, and is automatically and continuously renewed for additional 60-day terms with continued use. In the event more than 60 days passes without the Namaste Restauranter using the Namaste Restaurant Mobile Application, then the Namaste Restauranter’s next use constitutes a renewal of this Agreement. Namaste Restaurant reserves the right to terminate your access to the Application if you have not accepted a Namaste Restaurant Engagement in the previous twelve calendar months, if you materially breach the Agreement or any Namaste Restaurant Engagement, if you violate the law in connection with your use of the Application (or in connection with the performance of the Services) or if you have otherwise engage in conduct in using the Application that Namaste Restaurant, in its sole discretion, believes in good faith to be detrimental to its business interests.</p>\n                    <p style={{textAlign: 'left'}}><strong>8.2&nbsp;&nbsp;Survival. </strong>Sections 3 (“Independent Contractor Relationship”), 4 (“Confidentiality”), 5 (“No Conflicts”), 6 (“Representations and Warranties”), 7 (“Limitation of Liability”), 8.2 (“Survival”), and 9 (“General Provisions”) will survive any termination or expiration of this Agreement and/or any modification or termination of the Application. Termination or expiration of this Agreement will not affect either party’s liability for any breach of this Agreement such party may have committed before such expiration or termination.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>9. &nbsp;GENERAL PROVISIONS</strong></h3>\n                    <p style={{textAlign: 'left'}}><strong>9.1&nbsp;&nbsp;Law.&nbsp;Except for the “Mandatory Binding Individual Arbitration And Class Action Waiver” below, which is governed by the Federal Arbitration Act,</strong> this Agreement or any claim, cause of action or dispute (“Claim”) arising out of or related to this Agreement shall be governed by the laws of the state of in which the Namaste Restauranter resides regardless of your country of origin or where you access Namaste Restaurant, and notwithstanding any conflicts of law principles.</p>\n                    <p style={{textAlign: 'left'}}><strong>9.2&nbsp;&nbsp;&nbsp;</strong><strong>Mandatory Binding Individual Arbitration and Class Action Waiver</strong> (“Arbitration Agreement”). The Company and Contractor mutually agree to resolve any justiciable disputes between them exclusively through final and binding arbitration instead of filing a lawsuit in court. This Arbitration Agreement is governed by the Federal Arbitration Act (9 U.S.C. §§ 1-16) and, except as otherwise provided in this Arbitration Agreement, shall apply to any and all claims arising out of or relating to this Contract, the Contractor’s classification as an independent contractor, Contractor’s provision of services to the Company or its Customers, the payments received by Contractor for providing services to the Company or its Customers, the termination of this Contract, and all other aspects of the Contractor’s relationship with the Company, past, present or future, whether arising under federal, state or local statutory and/or common law, including without limitation harassment, discrimination or retaliation claims and claims arising under or related to the Civil Rights Act of 1964, Americans With Disabilities Act, Age Discrimination in Employment Act, Family Medical Leave Act, or Fair Labor Standards Act, state statutes or regulations addressing the same or similar subject matters, claims based on a joint employment or misclassification theory, and all other federal or state legal claims arising out of or relating to Contractor’s relationship or the termination of that relationship with the Company. The agreement by Contractor and the Company to mutually arbitrate disputes provides consideration for this Arbitration Agreement. This Arbitration Agreement applies to claims and disputes that the Company may have against Contractor and/or that Contractor may have against the Company, and (1) its affiliates and partners (2) its officers, directors, employees, or agents in their capacity as such or otherwise, and/or (3) all successors and assigns of any of them; any and all of which may enforce this Arbitration Agreement.</p>\n                    <p style={{textAlign: 'left'}}>To the fullest extent permitted by law, the Arbitrator, and not any federal, state, or local court or agency, shall have exclusive authority to resolve any dispute relating to the formation, interpretation, applicability, enforceability or alleged waiver of this Arbitration Agreement including, but not limited to any claim that all or any part of this Arbitration Agreement is void or voidable.</p>\n                    <p style={{textAlign: 'left'}}>This Arbitration Agreement does not apply to any claim that may not be arbitrated as provided by governing law. This Arbitration Agreement also does not apply to Private Attorney General Action claims under California law, which may only be brought in a court of law—not in arbitration.</p>\n                    <p style={{textAlign: 'left'}}>(a)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;If either party wishes to initiate arbitration, the initiating party must notify the other party in writing via certified mail, return receipt requested, or hand delivery within the applicable statute of limitations period. This demand for arbitration must include (1) the name and address of the party seeking arbitration, (2) a statement of the legal and factual basis of the claim, and (3) a description of the remedy sought. Any demand for arbitration by Contractor may be delivered to Namaste Restaurant at <a\n                        href=\"mailto:legal@Namaste Restaurant.com\">legal@Namaste Restaurant.com</a> so long as the details set forth in the previous sentence are presented in the demand for arbitration.</p>\n                    <p style={{textAlign: 'left'}}>(b)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<strong>Class Action Waiver.</strong> <strong>The Company and Contractor mutually agree that by entering into this Arbitration Agreement, both waive their right to have any dispute or claim brought, heard or arbitrated as a class action and/or collective action, and an arbitrator shall not have any authority to hear or arbitrate any class and/or collective action (“Class Action Waiver”). In any case in which (1) the dispute is filed as a class and/or collective action and (2) there is a final determination that all or part of the Class Action Waiver is unenforceable, the class or collective action to that extent must be litigated in a civil court of competent jurisdiction (if at all), but the portion of the Class Action Waiver that is enforceable shall be enforced in arbitration.</strong></p>\n                    <p style={{textAlign: 'left'}}>(c)&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;Contractor agrees and acknowledges that entering into this Arbitration Agreement does not change Contractor’s status as an independent contractor in fact and in law, that Contractor is not an employee of the Company or the Company’s Customer and that any disputes in this regard shall be subject to arbitration as provided in this Arbitration Agreement.</p>\n                    <p style={{textAlign: 'left'}}>(d)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;Any arbitration shall be governed by the American Arbitration Association Commercial Arbitration Rules (“AAA Rules”), although the parties may stipulate that the arbitration shall be governed by the American Arbitration Association Employment Arbitration Rules, depending on the claims at issue. In addition to and to the extent inconsistent with the foregoing AAA Rules, the following rules shall apply to any arbitration conducted pursuant to this Arbitration Agreement, unless the parties stipulate otherwise:</p>\n                    <p style={{textAlign: 'left'}}>(1)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;The arbitration shall be heard by one arbitrator selected in accordance with the AAA Rules. The arbitrator shall be a licensed attorney or retired judge with experience in the law underlying the dispute.</p>\n                    <p style={{textAlign: 'left'}}>(2)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;If the parties cannot otherwise agree on a location for the arbitration, the arbitration shall take place in the county in which Contractor performed his contractual duties for The Company.</p>\n                    <p style={{textAlign: 'left'}}>(3)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;Unless applicable law provides otherwise, as determined by the Arbitrator, the parties agree that the Company shall pay all of the Arbitrator’s fees and costs; however, if Contractor initiates arbitration, then Contractor must bear the extent of such costs (if any) as Contractor would be required to bear in bringing and maintaining a comparable legal proceeding outside of arbitration.</p>\n                    <p style={{textAlign: 'left'}}>(4)&nbsp; &nbsp; &nbsp; The Arbitrator shall be empowered to order such discovery, by way of deposition, interrogatory, document production, or otherwise, as the arbitrator considers necessary to a full and fair exploration of the issues in dispute, taking into consideration that arbitration is designed to be a speedy and efficient method for resolving disputes.</p>\n                    <p style={{textAlign: 'left'}}>(5)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;Except as provided in the Class Action Waiver, the Arbitrator may award all remedies to which a party is entitled under applicable law and which would otherwise be available in a court of law, but shall not be empowered to award any remedies that would not have been available in a court of law for the claims presented in arbitration. The Arbitrator shall apply the state or federal substantive law, or both, as is applicable.</p>\n                    <p style={{textAlign: 'left'}}>(6)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;The Arbitrator may hear motions to dismiss and/or motions for summary judgment and will apply the standards of the Federal Rules of Civil Procedure governing such motions.</p>\n                    <p style={{textAlign: 'left'}}>(7)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;The Arbitrator’s decision or award shall be in writing with findings of fact and conclusions of law. The award issued by the Arbitrator may be entered in any court of competent jurisdiction.</p>\n                    <p style={{textAlign: 'left'}}>(8) &nbsp; &nbsp; &nbsp; &nbsp;Either the Company or Contractor may apply to a court of competent jurisdiction for temporary or preliminary injunctive relief on the ground that without such relief the arbitration provided in this paragraph may be rendered ineffectual; provided, however, that all determinations of final relief shall be decided in arbitration, and pursuing the temporary or preliminary injunctive relief shall not constitute a waiver of rights under this agreement to arbitrate.</p>\n                    <p style={{textAlign: 'left'}}>(e)&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;Regardless of any other terms of this arbitration agreement, claims may be brought before and remedies awarded by an administrative agency (such as the National Labor Relations Board, Occupational Safety and Health Administration, Equal Employment Opportunity Commission, the U.S. Department of Labor, or similar state or local administrative agencies) if applicable law permits access to such an agency notwithstanding the existence of an agreement to arbitrate governed by the Federal Arbitration Act.</p>\n                    <p style={{textAlign: 'left'}}>(f) &nbsp; &nbsp; &nbsp;&nbsp; The AAA Rules may be found at <a\n                        href=\"https://www.adr.org/Rules\">https://www.adr.org/Rules</a> or by searching for “AAA Commercial Arbitration Rules” (or if applicable, “AAA Employment Arbitration Rules”) using a service such as www.Google.com or www.Bing.com or by asking <a\n                        href=\"mailto:legal@Namaste Restaurant.com\">legal@Namaste Restaurant.com</a>&nbsp;to provide a copy.</p>\n                    <p style={{textAlign: 'left'}}>(g) &nbsp; &nbsp; &nbsp; This arbitration agreement is the full and complete agreement relating to the formal resolution of disputes covered by this arbitration agreement. In the event any portion of this arbitration agreement is deemed unenforceable, the remainder of this arbitration agreement will be enforceable. Therefore, terms of this Arbitration Agreement shall be severed, to the smallest extent possible, if required to uphold the enforceability of this Arbitration Agreement. The Arbitration Agreement is a contractual agreement to mutually arbitrate claims; therefore any statements in any Company handbooks or policies that otherwise disclaim contracts do not apply to this Arbitration Agreement.</p>\n                    <p style={{textAlign: 'left'}}><strong>9.3 &nbsp;Modifications to Application.&nbsp;</strong>Namaste Restaurant reserves the right at any time to modify or discontinue, temporarily or permanently, the Application or the Service (or any part thereof) with or without notice. However, as stated above in Section 8.2 above, Section 9 (“General Provisions”), which contains the Arbitration Agreement, will survive any termination or expiration of this Agreement and/or any modification or termination of the Application or the Service. You agree that Namaste Restaurant shall not be liable to you or to any third party for any modification, suspension or discontinuance of the Application or the Services.</p>\n                    <h3 style={{fontFamily: 'Roboto'}}>10. Responding to Legal Process</h3>\n                    <p>Stripe may respond to and comply with any writ of attachment, lien, levy, subpoena, warrant, or other legal order (“Legal Process”) that we believe to be valid. We or any Payment Method Provider (including, where applicable, the Payment Method Acquirer for the Payment Method) may deliver or hold any funds or, subject to the terms of our Privacy Policy, any Data as required under such Legal Process, even if you are receiving funds or Data on behalf of other parties. Where permitted by Law, we will make reasonable efforts to provide you Notice of such Legal Process by sending a copy to the email address we have on file for you. Stripe is not responsible for any losses, whether direct or indirect, that you may incur as a result of our response or compliance with a Legal Process.</p>\n                    <h1 style={{textAlign: 'left', fontFamily: 'Roboto'}}>Appendix</h1>\n                    <h2 style={{textAlign: 'left', fontFamily: 'Roboto'}}>PAYROLL SERVICES AGREEMENT</h2>\n                    <p style={{textAlign: 'left'}}>This Services Agreement (“<strong>Services Agreement</strong>”) is a binding legal agreement between and among Customer, Namaste Restauranter, Frontline Work Inc. (“<strong>Frontline</strong>”) and Payroll Company that Frontline chooses as the employer of record (as described below). By using Frontline Payroll Services (“<strong>Frontline Payroll Services</strong>”) provided by the Namaste Restaurant Services Application (“<strong>Application</strong>”), you signify that you have read, understand, accept and agree to be bound by this Services Agreement.</p>\n                    <p style={{textAlign: 'left'}}>This Services Agreement includes and incorporates by this reference the agreements and policies (collectively the “<strong>Terms of Service</strong>”) relating to the Application. Frontline reserves the right to revise this Services Agreement and the Terms of Service and all information linked to them from time to time in its sole discretion. Frontline may make such revisions without prior notice: check back often for updates. Unless otherwise provided in such revision, the Services Agreement or Terms of Service, or any revised part of them, will take effect when and as posted.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>EMPLOYMENT RELATIONSHIP AND EMPLOYER OF RECORD</h3>\n                    <p style={{textAlign: 'left'}}>Upon accepting a Namaste Restaurant Request or an Open Request that is classified as Payroll with Customer through the Application (each a “<strong>Payrolled Namaste Restaurant Engagement</strong>”), Namaste Restauranter agrees and understands that Frontline will choose the payroll service company (the “<strong>Payroll Company</strong>”) to be the employer of record, meaning the Namaste Restauranter will be an employee of Payroll Company (a “<strong>Payroll Employee</strong>”) solely for Payrolled Namaste Restaurant Engagements. All other Namaste Restaurant Engagements will be on an independent contractor basis, as outlined in the Terms of Service. Frontline will instruct Payroll Company to assign Namaste Restauranter to work for Customer, and Customer is responsible for supervising Namaste Restauranter.</p>\n                    <p style={{textAlign: 'left'}}>Except as otherwise stated in this Services Agreement, Payroll Company is responsible for managing payroll, taxes, government documents, benefits (if applicable) and insurance. Customer is responsible for the supervision, direction and control of the day-to-day activities of each Namaste Restauranter assigned to Customer. Namaste Restauranter is responsible for performing the agreed-upon work for Customer.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>HIRING REPRESENTATIONS, DISCLAIMERS AND LIMITATIONS</h3>\n                    <p style={{textAlign: 'left'}}>Customer acknowledges and agrees that Customer has selected a Namaste Restauranter to become a Payroll Employee based upon Customer’s determination that the Namaste Restauranter accepted a Namaste Restaurant Request or an Open Request. Neither Frontline nor the Payroll Company makes any representations or warranties as to the skills, experience, background or education of any Namaste Restauranter.</p>\n                    <p style={{textAlign: 'left'}}>Namaste Restauranter acknowledges that Namaste Restauranter has agreed to become a Payroll Employee servicing Customer based on Namaste Restauranter’s own determination that Customer offers work acceptable and appropriate for Namaste Restauranter on terms that are acceptable to Namaste Restauranter. Namaste Restauranter agrees to complete such documents as Frontline and/or Payroll Company may legally and reasonably require to complete the employer/employee relationship, including without limitation applicable tax forms and the I-9 requirements of the Immigration and Reform and Control Act of 1986 (collectively, the “<strong>Employment Paperwork</strong>”). Namaste Restauranter understands and agrees that Namaste Restauranter will not become an employee of Payroll Company or be entitled to work for Customer or receive payment from Payroll Company until all Employment Paperwork has been completed and returned to Payroll Company, and Payroll Company has accepted Namaste Restauranter as an employee.</p>\n                    <p style={{textAlign: 'left'}}>Customer will continue to issue Open or Namaste Restaurant Requests and pay for Namaste Restauranter through the Application. Frontline assumes no responsibility for and shall exert no control over the projects and work assigned to Namaste Restauranter, nor has Frontline had any role in Customer’s decision to engage Namaste Restauranter via Payroll Services. Frontline shall not direct the work of or supervise (to any degree, directly or indirectly) Namaste Restauranter, nor shall Frontline determine any terms and conditions of Namaste Restauranter’s employment relationship with Payroll Company or Customer (including but not limited to rate of pay, performance evaluation, discipline and/or termination). Frontline merely provides the platform for Customer to request Namaste Restauranter to accept certain work assignments, and separately facilitates the relationship between Customer and the Payroll Company that will handle the administration of payroll and other legal obligations of Customer with regard to Namaste Restauranter. These facts, alone or in combination, do not make Frontline an employer of Namaste Restauranter or a co-employer/joint employer with Customer and/or the Payroll Company. <strong>Namaste Restauranter acknowledges and agrees that he/she is</strong>&nbsp;\n                        <strong>not an employee, consultant, or independent contractor of Frontline, and that he/she will not be providing any services to Frontline (directly or indirectly) while employed by Payroll Company</strong>.</p>\n                    <p style={{textAlign: 'left'}}>Namaste Restauranter shall be solely responsible for the professional performance of Namaste Restauranter’s work. Namaste Restauranter shall be solely liable for its acts, omissions and negligence.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>PAYROLL SERVICES</h3>\n                    <p style={{textAlign: 'left'}}>The following are the services provided by the Payroll Company for Payroll Employees assigned to Customer: (i) calculation and payment of wages (including overtime wages) based upon submitted timesheets; (ii) collection, payment and reporting of all federal, state and local taxes on such wages; (iii) administration and management of unemployment claims; (iv) administration and collection of wages associated with wage garnishments; (v) workers’ compensation coverage. In addition, the Payroll Company shall provide and bear sole responsibility for any health or disability insurance, retirement benefits or other welfare or pension benefits (if any) to which such personnel may be entitled based on eligibility.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>CONTROL OF WORKPLACE</h3>\n                    <p style={{textAlign: 'left'}}>Customer and Namaste Restauranter acknowledge and agree that the neither Frontline nor the Payroll Company will control the workplace in which a Payroll Employee will perform services for a Customer.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>PAYROLL EMPLOYEE SUPERVISION AND LIMITATIONS ON SCOPE OF EMPLOYMENT</h3>\n                    <p style={{textAlign: 'left'}}>At all times, the Customer will maintain the exclusive supervision, direction and control of the day-to-day activities of each Payroll Employee. The Customer shall be responsible for the implementation and enforcement of any and all workplace laws, rules, regulations and for any procedures that exist for the purpose of preventing the misappropriation, theft or embezzlement of the Customer’s property, including without limitation intellectual property.</p>\n                    <p style={{textAlign: 'left'}}>Customer acknowledges and agrees that Payroll Employees are not employees or consultants of Frontline and that Frontline maintains no control over any Namaste Restaurant Engagement, supervision of Namaste Restauranters, payroll practices or other terms and conditions of the working relationship described herein. Customer further acknowledges and agrees that Payroll Employees are employees of the Payroll Company for purposes of payroll processing and, in some cases, the provision of certain statutorily required employee benefits, but that the Payroll Company maintains no control over the work assignments, supervision, or other terms and conditions of the working relationship except as described in this Services Agreement.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>COMPLIANCE WITH LAWS, RULES AND REGULATIONS</h3>\n                    <p style={{textAlign: 'left'}}>Customer shall comply with all state, federal and local laws, rules and regulations that govern or relate to its business, workplace, employees (including without limitation Payroll Employees), safety and government contracting. Customer shall comply with all reasonable directives regarding health and safety from the Payroll Company’s workers’ compensation carrier or any government agency. Customer is required to accept and adhere to the Payroll Company’s determination regarding each Payroll Employee’s exempt or non-exempt status for purposes of state and federal overtime laws.</p>\n                    <p style={{textAlign: 'left'}}>Namaste Restauranter agrees and understands that Namaste Restauranter shall not work over 8 hours in a day or 29 hours in a week without express written approval by Customer, Frontline, and Payroll Company.</p>\n                    <p style={{textAlign: 'left'}}>Notwithstanding the fact that the Payroll Company reserves the right to make determinations regarding the overtime exemption status of each Payroll Employee,&nbsp;\n                        <strong>Customer is ultimately and solely responsible for the amount of any wages that are due but unpaid to each of its Payroll Employees</strong>, including without limitation any wages, back wages, and liquidated damages determined to be due and owing in connection with any action challenging the overtime exemption status of any Payroll Employee<strong>.</strong></p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>EQUAL EMPLOYMENT OPPORTUNITY, WORKPLACE LAWS</h3>\n                    <p style={{textAlign: 'left'}}>Payroll Company selected by Frontline to provide Payroll Services is an equal opportunity employer and does not discriminate against any candidate, applicant, employee, independent contractor or Payroll Employee on the basis of race, color, religion, sex, national origin, age, creed, ancestry, veteran or military status, disability unrelated to the essential functions of a job, or any other basis prohibited by federal, state or local law. Customer and Payroll Employee shall comply with all federal, state, and local laws that prohibit unlawful discrimination or harassment.</p>\n                    <h4 style={{textAlign: 'left'}}><strong>Policy Against Sexual Harassment And Other Illegal Harassment</strong></h4>\n                    <p style={{textAlign: 'left'}}>Payroll Company, Customer and Frontline prohibit sexual and other illegal workplace harassment. Customer shall train its Payroll Employees about their rights and responsibilities pursuant to applicable law pertaining to non-harassment or other illegal workplace harassment. Customer will be informed if any special training requirements legally pertain to a Payroll Employee by virtue of that person being employed by Payroll Company. Payroll Company and Customer will provide all Payroll Employees with written information detailing their rights and responsibilities under Customer’s and Payroll Company’s policies against sexual harassment and other illegal workplace harassment. Customer shall inform Payroll Company immediately of any complaint of illegal harassment by or against a Payroll Employee and shall undertake and complete a prompt and thorough investigation of any such complaint. Upon notification, Payroll Company may assist Customer with the investigation of sexual harassment complaints made by or against Payroll Employees, but the costs associated with such investigation shall be borne by Customer.</p>\n                    <p style={{textAlign: 'left'}}>If Namaste Restauranter believes that he/she has not been provided equal opportunity in any manner, or if Namaste Restauranter becomes aware of discrimination or harassment, Namaste Restauranter should immediately report that conduct to Frontline at&nbsp;\n                        <a href=\"mailto:support@frontlinework.com\">support@frontlinework.com</a>or 302-703-7668.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}><strong>REQUIRED NOTIFICATIONS</strong></h3>\n                    <p style={{textAlign: 'left'}}>The Customer will send all written notices and payroll communications to Frontline in accordance with the requirements of the Terms of Service.</p>\n                    <p style={{textAlign: 'left'}}>Namaste Restauranter must inform Customer of any work-related injury in connection with services performed for Customer. Customer will provide Frontline with written notice within three (3) days of its own receipt of any notice of a work-related accident or injury, and within three (3) days of its receipt of any notice of any garnishment orders, involuntary deduction orders, notices of IRS liens and other forms of legal process affecting the payment of wages to a Payroll Employee.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>DISCLAIMERS</h3>\n                    <p style={{textAlign: 'left'}}>Notwithstanding anything to the contrary, Customer and Namaste Restauranter acknowledge and agree that:</p>\n                    <ol style={{textAlign: 'left'}}>\n                    <li>&nbsp;Frontline, via the Application, is solely an online venue for buyers and sellers of services and, as such, shall not be responsible for any breach or failure to perform of the Payroll Company or any other action or inaction of the Payroll Company or any Customer or any Namaste Restauranter; and</li>\n                    <li>&nbsp;Payroll Company shall not be responsible for any breach or failure to perform of Frontline or any Customer or any other action or inaction of Frontline or any Customer or any Namaste Restauranter.</li>\n                    </ol>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>CHANGE OF PAYROLL COMPANY</h3>\n                    <p style={{textAlign: 'left'}}>Frontline may designate a new third party payroll company (“<strong>New Company</strong>”), at any time in Frontline’s sole discretion, to perform Frontline Payroll Services. Upon such designation, or at any other time as directed by Frontline, Customer shall: (i) cooperate with such New Company in every reasonable manner to ensure uninterrupted performance of the Frontline Payroll Services; or if directed by Frontline (ii) immediately assume all federal, state and local obligations of an employer to the Payroll Employees and immediately assume full responsibility for providing payroll services and workers’ compensation coverage until such time as a New Company takes over such duties from The Payroll Company. If directed by Frontline, Customer shall inform Payroll Employees that they are no longer covered by the Payroll Company for Frontline Payroll Services, workers’ compensation and/or health care policies.</p>\n                    <h3 style={{textAlign: 'left', fontFamily: 'Roboto'}}>GENERAL PROVISIONS</h3>\n                    <p style={{textAlign: 'left'}}><strong>Governing Law and Venue</strong>. The Services Agreement and any action related thereto will be governed, controlled, interpreted, and defined by and under the laws of the State as set forth in the Arbitration provision above, without giving effect to any conflicts of laws principles that require the application of the law of a different jurisdiction. Customer and Namaste Restauranter hereby expressly consents to the personal jurisdiction and venue in the state and federal courts or the county in which Customer’s principal place of business is located solely in the event of any lawsuit filed there against Namaste Restauranter by Customer or by Frontline arising from or related to Frontline Payroll Services and/or this Services Agreement.</p>\n                    <p style={{textAlign: 'left'}}><strong>Severability</strong>. If any provision of the Services Agreement is, for any reason, held to be invalid or unenforceable, the other provisions of the Services Agreement will be unimpaired and the invalid or unenforceable provision will be deemed modified so that it is valid and enforceable to the maximum extent permitted by law.</p>\n                    <p style={{textAlign: 'left'}}><strong>No Assignment</strong>. The Services Agreement, and the party’s rights and obligations herein, may not be assigned, subcontracted, delegated, or otherwise transferred by either party without the other’s prior written consent, and any attempted Job, subcontract, delegation, or transfer in violation of the foregoing will be null and void. The terms of the Services Agreement will be binding upon assignees. Notwithstanding the foregoing, Customer may, without the consent of Namaste Restauranter, assign any rights and obligations under the Payroll.</p>\n                    <p style={{textAlign: 'left'}}><strong>Waiver</strong>. Any waiver or failure to enforce any provision of the Services Agreement on one occasion will not be deemed a waiver of any other provision or of such provision on any other occasion.</p>\n                    <p style={{textAlign: 'left'}}><strong>Execution and Delivery; Binding Effect</strong>. The parties will evidence execution and delivery of the Services Agreement with the intention of becoming legally bound, by using Frontline Payroll Services provided by the Application.</p>\n                    </span>\n                </div>\n            </Container>\n        </div>\n    );\n}","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CartTotalsCheckout(props) {\n        return (\n            <div>\n                <h4 className='text-uppercase my-auto'>Cart Totals</h4>\n                <Card className='mt-3'>\n                    <Card.Header className='pl-2 font-weight-bold'>\n                        {props.total} Products\n                    </Card.Header>\n                    <Card.Body className='d-flex justify-content-between p-2 mt-3'>\n                        <Card.Text>\n                            Products Price\n                        </Card.Text>\n                        <Card.Text>\n                            ${props.totalPrice}\n                        </Card.Text>\n                    </Card.Body>\n\n                    <Card.Body className='d-flex justify-content-between p-2'>\n                        <Card.Text>\n                            Delivery\n                        </Card.Text>\n                        <Card.Text>\n                            ${3.50}\n                        </Card.Text>\n                    </Card.Body>\n\n                    <Card.Body className='d-flex justify-content-between p-2'>\n                        <Card.Text>\n                            Total\n                        </Card.Text>\n                        <Card.Text>\n                            ${props.totalPrice + 3.50}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button onClick={props.handleNewOrder} variant='warning' block disabled={props.disabled}>\n                            {props.buttonText}\n                        </Button>\n                        <hr/>\n                        <h6 className='mt-3'>\n                            WE ACCEPT:\n                            <Image className=\"img-thumbnail mt-1\" src=\"https://assets.asosservices.com/asos-finance/images/marketing/single.png\"\n                                   alt=\"payment options\"/>\n                        </h6>\n                        <p style={{fontSize: '0.8em'}}>\n                            Got a coupon code? Add it in the next step\n                        </p>\n                    </Card.Footer>\n                </Card>\n\n            </div>\n        );\n}","import React, {Component} from 'react';\nimport CustomParallax from \"../components/CustomParallax\";\nimport home_top from \"../assets/home_top.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CartTotalsCheckout from \"../components/CartTotalsCheckout\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {postNewOrder} from \"../utils/api\";\nimport {Set, Reset} from \"../redux/actions/cartActions\";\nimport {round} from \"../utils/functions\";\n\nclass Checkout extends Component {\n    state = {\n        expYear: '',\n        expMonth: '',\n        cardName: '',\n        cardNum: '',\n        cvv: ''\n    };\n\n    validateForm() {\n        return !(this.state.expYear.length > 0 && this.state.expMonth.length > 0 && this.state.cardName.length > 0 && this.state.cardNum.length > 0 && this.state.cvv.length > 0);\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleNewOrder = async (event) => {\n        event.preventDefault();\n        let res = await postNewOrder(this.props.email, this.state, this.props.items, this.props.total, this.props.totalPrice + 3.5);\n        if (res) {\n            this.props.Reset();\n            this.props.history.push('');\n        }\n    };\n\n    render() {\n\n        const checkout = <Row>\n            <Col xs={12} lg={8}>\n                <h4 className='text-uppercase mr-2 my-auto'>My Cart</h4>\n\n                <Card className='mt-3'>\n                    <Card.Header>EMAIL ADDRESS</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            {this.props.email}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card className='mt-3'>\n                    <Card.Header>DELIVERY ADDRESS</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            {this.props.firstName} {this.props.lastName}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.address}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.city}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.country}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.zip}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n                <Card className='mt-3'>\n                    <Card.Header>PAYMENT</Card.Header>\n                    <Card.Body>\n                        <Card.Title>\n                            BILLING ADDRESS\n                        </Card.Title>\n                        <Card.Text>\n                            {this.props.firstName} {this.props.lastName}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.address}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.city}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.country}\n                        </Card.Text>\n                        <Card.Text>\n                            {this.props.zip}\n                        </Card.Text>\n\n                        <hr/>\n\n                        <Card.Title>\n                            PAYMENT TYPE\n                        </Card.Title>\n                        <Form className='my-4'>\n                            <Form.Group controlId=\"cardNum\">\n                                <Form.Label>Card Number</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"Card Number\" required/>\n                            </Form.Group>\n\n                            <Form.Label>Expiry Date</Form.Label>\n                            <Form.Row>\n                                <Form.Group controlId=\"expMonth\">\n                                    <Form.Control onChange={this.handleChange} as=\"select\" required>\n                                        <option disabled selected>Choose...</option>\n                                        {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n                                            return <option>{num}</option>\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"expYear\">\n                                    <Form.Control onChange={this.handleChange} as=\"select\" required>\n                                        <option disabled selected>Choose...</option>\n                                        {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(num => {\n                                            return <option>{num}</option>\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"cardName\">\n                                <Form.Label>Name On Card</Form.Label>\n                                <Form.Control onChange={this.handleChange} placeholder=\"Name On Card\" required/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"cvv\">\n                                <Form.Label>CVV</Form.Label>\n                                <Form.Control onChange={this.handleChange} type='number' placeholder=\"CVV\" required/>\n                            </Form.Group>\n\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n            <Col className='ml-lg-5 pl-lg-2 mt-4 mt-lg-0' xs={12} lg={3}>\n                <CartTotalsCheckout handleNewOrder={this.handleNewOrder} disabled={this.validateForm()} buttonText='Place Order'\n                                    total={this.props.total}\n                                    totalPrice={round(this.props.totalPrice)}/>\n            </Col>\n        </Row>;\n\n        const needToLogin =\n            <div className='text-center'>\n                <h2>\n                    You must Login or Signup to checkout\n                </h2>\n                <Link to='login'>\n                    <Button variant='warning' className='mt-4'>\n                        To Login/Signup\n                    </Button>\n                </Link>\n            </div>;\n\n        return (\n            <React.Fragment>\n                <CustomParallax title='Checkout' img={home_top} height={300}/>\n                <Container className='my-auto Checkout'>\n                    {this.props.loggedIn ? checkout : needToLogin}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cart.items,\n        total: state.cart.total,\n        totalPrice: state.cart.totalPrice,\n        loggedIn: state.user.loggedIn,\n        email: state.user.email,\n        firstName: state.user.firstName,\n        lastName: state.user.lastName,\n        address: state.user.address,\n        zip: state.user.zip,\n        city: state.user.city,\n        country: state.user.country,\n        houseNum: state.user.houseNum,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        Set: (title, num) => {\n            dispatch(Set(title, num))\n        },\n        Reset: (title, num) => {\n            dispatch(Reset(title, num))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout)\n","import React from 'react';\nimport CustomParallax from '../components/CustomParallax'\nimport home_top from '../assets/home_top.jpg'\nimport Container from \"react-bootstrap/Container\";\n\nexport default function Readme() {\n    return (\n        <>\n            <CustomParallax title='Readme' text=\"Nitai Aharoni Readme\" img={home_top} height='20em'/>\n            <Container className=\"p-5\">\n                <article className=\"markdown-body entry-content\" itemProp=\"text\">\n                    <div>\n                        <h1>Namaste Restaurant - React ecommerce website</h1>\n                        <hr/>\n                        <p>Namaste Restaurant is an ecommerce website built using React, Redux integrated with Node.js and Express backend.</p>\n                        <p>A demo for the Website App is available <a href=\"https://mamas-restaurant-app.herokuapp.com/\" rel=\"nofollow\">here</a>.\n                        </p>\n                    </div>\n\n                    <div>\n                        <h2>Project Questions</h2>\n                        <hr/>\n\n                        <div>\n                            <h4>What are you selling?</h4>\n                            <ul>\n                                <li>Our store is basically a restaurant and we sell food through delivery to the customer's house.</li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>What additional page did you add? How to operate them?</h4>\n                            <p>Home page <code>/home</code>:\n                                * Welcome home page.\n                                * You can scroll and see pictures with effect, and get information about the restaurant.\n                                * Each of the pages in the app is accompanied by a navbar that lets you navigate between the different app pages.\n                                The\n                                navbar also contains a cart button which is used as a pop-up on mouseover, Above it is a number showing the\n                                quantity\n                                of products in the cart.</p>\n                            <ul>\n                                <li>\n                                    <p>Deliveries page <code>/delivery</code>:</p>\n                                    <ul>\n                                        <li>You can add a product to the cart</li>\n                                        <li>You can use search input to search for a specific product by description, title or price</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Gallery page <code>/gallery</code>:</p>\n                                    <ul>\n                                        <li>Image gallery received from the server (simulates access to the database)</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Menu pages <code>/menu</code>:</p>\n                                    <ul>\n                                        <li>Two menu pages, render the objects iteratively.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Admin page <code>/admin</code>:</p>\n                                    <ul>\n                                        <li>An admin page can only be accessed if an admin user is logged in.</li>\n                                        <li>The page that allows to view the database in json format.</li>\n                                        <li>You can click on the arrows to view specific user's data.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Login page <code>/login</code>:</p>\n                                    <ul>\n                                        <li>You can enter email/username and password to login and receive a user data.</li>\n                                        <li>To place a new order, you must login to the site.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Signup page <code>/signup</code>:</p>\n                                    <ul>\n                                        <li>You can register a new user for the site.</li>\n                                        <li>All fields must be entered in the right format to click on the Subscribe button.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Cart page <code>/cart</code>:</p>\n                                    <ul>\n                                        <li>The selected products will appear in the cart.</li>\n                                        <li>Products for a signed-in user will be stored in a database so that a user can see them even after the\n                                            site\n                                            is refreshed or exited.\n                                        </li>\n                                        <li>You can add a quantity to a specific product or delete it from the cart.</li>\n                                        <li>You can see a summary of the quantity and cost of the products</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Checkout page <code>/chekout</code>:</p>\n                                    <ul>\n                                        <li>This page shows user information includes address, name, email, etc.</li>\n                                        <li>To place an order you can enter payment details in the correct format.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Terms of service page <code>/terms</code>:</p>\n                                    <ul>\n                                        <li>Displays the terms of use before registering for the site.</li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <p>Page not found page <code>/any other</code>:</p>\n                                    <ul>\n                                        <li>This page will display when any route that is not defined is used.</li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>What was hard to do?</h4>\n                            <ul>\n                                <li>Learn to React from scratch.</li>\n                                <li>Learn Bootstrap from scratch, which was very hard for me to understand at the beginning.</li>\n                                <li>Learn Redux framework from scratch (Working in a very non-intuitive way I must say).</li>\n                                <li>Learn Jest and Enzyme testing framework from scratch.</li>\n                                <li>Integrate with Node Express and save the data (And deployment to Heroku that I wanted to do to allow my site\n                                    to be public).\n                                </li>\n                                <li>In general, coding the project took me around 120 hours, which in itself is difficult.</li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>Who is your partner name and id?</h4>\n                            <ul>\n                                <li>Me: <code>Nitai Aharoni 203626742</code></li>\n                                <li>Partner: <code>Nadav Lotan 312346406</code></li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>Specify all the different route your app supports</h4>\n                            <ul>\n                                <li>\n                                    <p>Update user's items in db - POST <code>/api/items/:email/:title/:action</code></p>\n                                </li>\n                                <li>\n                                    <p>Authenticate user with cookie on lunching the app and getting user's data -\n                                        GET <code>/api/items/:email/:title/:action</code></p>\n                                </li>\n                                <li>\n                                    <p>Admin get all database - GET <code>/api/admin/data/:email</code></p>\n                                </li>\n                                <li>\n                                    <p>Login user - GET <code>/api/user/login/:email/:password/:remember</code></p>\n                                </li>\n                                <li>\n                                    <p>Logout user - POST <code>/api/user/logout</code></p>\n                                </li>\n                                <li>\n                                    <p>Signup new user - POST <code>/api/user/signup</code></p>\n                                </li>                                <li>\n                                    <p>Delete a user - DELETE <code>/api/user/:email/:password</code></p>\n                                </li>\n                                <li>\n                                    <p>Post a new order - POST <code>/api/order/new/:email</code></p>\n                                </li>\n                                <li>\n                                    <p>Get gallery images (Simulates database access) - GET <code>/api/gallery</code></p>\n                                </li>\n                                <li>\n                                    <p>Serves react client static files - GET <code>*</code></p>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>How did you make your store secured?</h4>\n                            <ul>\n                                <li>Validating all forms.</li>\n                                <li>Validating admin user before showing Admin page.</li>\n                                <li>Validating requests on the server.</li>\n                                <li>Working with cookies.</li>\n                                <li>Not exposing static files which contain private information.</li>\n                                <li>Preventing repeated requests (DDOS) to the API with express-rate-limit.</li>\n                            </ul>\n                        </div>\n\n                        <div>\n                            <h4>Did you implement the store using react.js?</h4>\n                            <p>Yes, React and Redux</p>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h2>Prerequisites</h2>\n                        <hr/>\n                        <ol>\n                            <li>Git</li>\n                            <li>Node v10.16.1</li>\n                            <li>A fork/clone of this repo</li>\n                        </ol>\n                    </div>\n\n                    <div>\n                        <h2>Running locally</h2>\n                        <hr/>\n                        <ol>\n                            <li>In react-restaurant-website directory run in terminal: <code>npm run app</code></li>\n                            <li>Open <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a></li>\n                        </ol>\n                    </div>\n\n                    <div>\n                        <h2>Testing</h2>\n                        <hr/>\n                        <ol>\n                            <li>In react-restaurant-website directory run in terminal: <code>npm test</code></li>\n                            <li>Run all tests: <code>a</code></li>\n                        </ol>\n                    </div>\n\n                </article>\n            </Container>\n        </>\n    );\n}","import React, { Component } from 'react';\nimport ReactJson from \"react-json-view\";\nimport CustomParallax from \"../components/CustomParallax\";\nimport home_top from \"../assets/home_top.jpg\";\nimport { connect } from \"react-redux\";\nimport { getAdminData } from \"../utils/api\";\nimport { Container } from \"react-bootstrap\";\n\nclass Admin extends Component {\n    state = {\n        json: {}\n    };\n\n    async componentDidMount() {\n        if (this.props.email === 'admin' && this.props.loggedIn) {\n            const json = (await getAdminData(this.props.email, this.props.loggedIn)).data;\n            this.setState({json: json});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <CustomParallax title='Admin Page' img={home_top} height='20em'/>\n                <Container>\n                    <h2>Database JSON</h2>\n                    <ReactJson src={this.state.json} theme=\"rjv-default\" displayDataTypes={false} enableClipboard={false}\n                               collapseStringsAfterLength={20}/>\n                </Container>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.user.loggedIn,\n        email: state.user.email\n    }\n};\n\nexport default connect(mapStateToProps, null)(Admin)","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function Footer() {\n    return (\n        <Jumbotron className='text-left text-light bg-dark mb-0 mt-5 font-footer p-4'>\n            <Container>\n                <Row>\n                    <Col xs={7} sm={8} className='border-right'>\n                        <p className='text-uppercase'>LOCATIONS</p>\n                        <Row className='text-capitalize'>\n                            <Col lg={3}>\n                                <p>Sydney\n                                    376 Fake Street\n                                    Sydney, NSW — 11231\n                                    (718) 555-1234\n                                </p>\n                            </Col>\n                            <Col lg={3}>\n                                <p>Queens\n                                    47-33 Fake Street\n                                    Long Island, WA — 11101\n                                    (347) 555-1234</p>\n                            </Col>\n                            <Col lg={3}>\n                                <p>Food Truck\n                                    25 Gaurab Street\n                                    Kathmandu, NEPAL — 10003\n                                    (917) 555-1234</p>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                    <Col>\n                        <Col>\n                            <p className='text-uppercase'>Hours</p>\n                            <p>Monday — Thursday\n                                <p>8am — 11pm </p>\n                            </p>\n\n                            <p>\n                                Friday — Sunday\n                                <p>11am — 11pm</p>\n                            </p>\n                        </Col>\n                    </Col>\n                </Row>\n            </Container>\n\n        </Jumbotron>\n    );\n}","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {Header, Home, Delivery, Error, Gallery, MenuLunch, MenuEvening, Cart, Login, Signup, Checkout, Terms, Readme, Admin} from './utils'\nimport Footer from \"./components/Footer\";\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {getUserAuth} from \"./utils/api\";\nimport {userLogin} from \"./redux/actions/userActions\";\nimport {Reset, Set} from \"./redux/actions/cartActions\";\n\nclass App extends Component {\n    async componentDidMount() {\n        const isToken = document.cookie.includes('token_mama');\n        if (isToken) {\n            let res = await getUserAuth();\n            if (res) {\n                this.props.userLogin(res.data.user);\n                this.props.Reset();\n                this.setItemsNum(res.data.currentItems);\n            }\n        }\n    }\n\n    setItemsNum(items) {\n        Object.keys(items).forEach((item) => {\n                this.props.Set(item, items[item])\n            }\n        );\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Header className=\"Header\"/>\n                    \n                    <Switch>\n                        <Route exact path=\"/delivery\" component={Delivery}/>\n                        \n                        <Route exact path=\"/gallery\" component={Gallery}/>\n                        <Route exact path=\"/menu.lunch\" component={MenuLunch}/>\n                        <Route exact path=\"/menu.evening\" component={MenuEvening}/>\n                        <Route exact path=\"/cart\" component={Cart}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/signup\" component={Signup}/>\n                        <Route exact path=\"/checkout\" component={Checkout}/>\n                        <Route exact path=\"/terms\" component={Terms}/>\n                        <Route exact path=\"/readme\" component={Readme}/>\n                        {this.props.loggedIn && this.props.email === 'admin' && <Route exact path=\"/admin\" component={Admin}/>}\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route component={Error}/>\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.user.loggedIn,\n        email: state.user.email\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogin: (data) => {\n            dispatch(userLogin(data))\n        },\n        Set: (title, num) => {\n            dispatch(Set(title, num))\n        },\n        Reset: () => {\n            dispatch(Reset())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const initialState = {\n    total: 0,\n    totalPrice: 0,\n    items: {\n        'Fried Spring Rolls': {\n            num: 0,\n            img: 'https://www.araioflight.com/wp-content/uploads/2021/03/Traditional-food-of-Nepal-National-dish-cuisine.jpg',\n            title: 'Thakali Khana Set',\n            price: '21.95',\n            description: 'goat, chicken or vegetable',\n            meal: 'appetizer'\n        },\n        'Pani Puri': {\n            num: 0,\n            img: 'https://cdn.stunningnepal.com/wp-content/uploads/2019/11/Nepali-PaniPuri-1024x1024.jpg',\n            title: 'Pani Puri',\n            price: '4.95',\n            description: 'skewered chicken or beef with a peanut sauce',\n            meal: 'appetizer'\n        },\n        'Mo:Mo': {\n            num: 0,\n            img: 'https://i1.wp.com/asiatimes.com/wp-content/uploads/2017/04/Plateful_of_Momo_in_Nepal.jpg',\n            title: 'Mo:Mo',\n            price: '14.75',\n            description: 'Nepalese dumpling, comes in buff, chicken or vegetable',\n            meal: 'appetizer'\n        },\n        'Sell-Roti': {\n            num: 0,\n\n            img: 'https://cdn.tasteatlas.com//images/dishes/9b16317d2d8e4dfeb20e1d0e20497cf5.jpg?w=375&h=280',\n            title: 'Fresh sellroti',\n            price: '3.95',\n            description: 'with shrimp in a tamarind sauce',\n            meal: 'appetizer'\n        },\n        'Fried Tiger Shrimp Rolls': {\n            num: 0,\n            img: 'https://media1.fdncms.com/riverfronttimes/imager/u/original/2633986/sushi_house_white_tiger.jpg',\n            title: 'Fried Tiger Shrimp Rolls',\n            price: '6.50',\n            description: 'with a plum sauce',\n            meal: 'appetizer'\n        },\n        'Duck Choila': {\n            num: 0,\n            img: 'https://www.chefspencil.com/wp-content/uploads/choila.jpg',\n            title: 'duck choila',\n            price: '8.95',\n            description: 'glazed and grilled marinated chicken',\n            meal: 'appetizer'\n        },\n        'Khaja Set': {\n            num: 0,\n            img: 'https://lh4.googleusercontent.com/-9RVnw7daF7E/Tt_LUL1MiRI/AAAAAAAAAY0/m_HgPE5X7IM/s1600/Newarithali.jpg',\n            title: 'Khaja Set',\n            price: '7.95',\n            description: 'khaja set comes in chicken, chiura and others',\n            meal: 'main'\n        },\n        'Bara Set': {\n            num: 0,\n            img: 'https://lh4.googleusercontent.com/-9RVnw7daF7E/Tt_LUL1MiRI/AAAAAAAAAY0/m_HgPE5X7IM/s1600/Newarithali.jpg',\n            title: 'Bara Set',\n            price: '18.50',\n            description: 'sauteed sliced chicken bara with peppers, cabbage, carrots and onions in a chili basil sauce',\n            meal: 'main'\n        },\n        'Chicken and Dhido': {\n            num: 0,\n\n            img: 'https://i.pinimg.com/originals/a8/4c/d4/a84cd4abb2b0b17a6f2b45f81bfaf67e.jpg',\n            title: 'Chicken and Dhido',\n            price: '28.95',\n            description: 'Chicken and dhido',\n            meal: 'main'\n        },\n        'Mutton and Rice': {\n            num: 0,\n            img: 'https://speakingaloud.in/wp-content/uploads/2017/10/Kosha-Mangsho-Recipe.jpg',\n            title: 'Mutton and Rice',\n            price: '27.95',\n            description: 'serve with mutton gravy and rice, cabbage and onions in a fresh garlic sauce',\n            meal: 'main'\n        },\n        'Fried Banana': {\n            num: 0,\n            img: 'https://img.delicious.com.au/DCI69ugT/w1200/del/2016/04/banana-fritters-28785-1.jpg',\n            title: 'Fried Banana',\n            price: '7.50',\n            description: 'deep-fried banana topped with coconut ice cream',\n            meal: 'desert'\n        },\n        'Rasbari and yogurt': {\n            num: 0,\n            img: 'https://recipenp.com/wp-content/uploads/2020/03/rasgoola.jpg',\n            title: 'Rasbari and yogurt',\n            price: '4.95',\n            description: 'Cold yogurt serves with Hot Rasbari',\n            meal: 'desert'\n        },\n        'Jilebi': {\n            num: 0,\n            img: 'https://i1.wp.com/recipenp.com/wp-content/uploads/2020/04/jalebi.jpg',\n            title: 'Jilebi',\n            price: '8.50',\n            description: 'hot jilebi serves with cold yogurt',\n            meal: 'desert'\n        }\n    }\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD':\n            state = {\n                ...state,\n                total: state.total + action.num,\n                totalPrice: state.totalPrice + (state.items[action.title].price * action.num),\n                items: {\n                    ...state.items,\n                    [action.title]: {\n                        ...state.items[action.title],\n                        num: state.items[action.title].num + action.num\n                    }\n                }\n            };\n            break;\n        case 'SET':\n            state = {\n                ...state,\n                total: state.total + action.num,\n                totalPrice: state.totalPrice + (state.items[action.title].price * action.num),\n                items: {\n                    ...state.items,\n                    [action.title]: {\n                        ...state.items[action.title],\n                        num: action.num\n                    }\n                }\n            };\n            break;\n        case 'SUB':\n            state = {\n                ...state,\n                total: state.total - action.num,\n                totalPrice: state.totalPrice - (state.items[action.title].price * action.num),\n                items: {\n                    ...state.items,\n                    [action.title]: {\n                        ...state.items[action.title],\n                        num: state.items[action.title].num - action.num\n                    }\n                }\n            };\n            break;\n        case 'ZERO':\n            state = {\n                ...state,\n                total: state.total - state.items[action.title].num,\n                totalPrice: state.totalPrice - (state.items[action.title].num * state.items[action.title].price),\n                items: {\n                    ...state.items,\n                    [action.title]: {\n                        ...state.items[action.title],\n                        num: 0\n                    }\n                }\n            };\n            break;\n        case 'RESET':\n            state = initialState;\n            break;\n    }\n\n    return state;\n}\n\n","const initialState = {\n    firstName: '',\n    lastName: '',\n    address: '',\n    zip: '',\n    city: '',\n    country: '',\n    houseNum: '',\n    email: '',\n    loggedIn: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'SIGNUP':\n            state = {\n                ...state,\n                firstName: action.data.firstName,\n                lastName: action.data.lastName,\n                address: action.data.address,\n                zip: action.data.zip,\n                city: action.data.city,\n                country: action.data.country,\n                houseNum: action.data.houseNum,\n                email: action.data.email,\n                loggedIn: true\n            };\n            break;\n        case 'LOGIN':\n            state = {\n                ...state,\n                ...action.data,\n                loggedIn: true\n            };\n            break;\n        case 'LOGOUT':\n            state = {\n                ...initialState,\n            };\n            break;\n    }\n    return state;\n}","import { combineReducers } from \"redux\";\nimport cartReducer from './cartReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    cart: cartReducer,\n    user: userReducer\n\n})","import { createStore } from \"redux\";\nimport rootReducer from './reducers'\n\nconst reduxStore = createStore(rootReducer, {}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default reduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport reduxStore from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={reduxStore}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/home_top.5c8f279d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menu_top.020309c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card_home_1.f176b76b.jpg\";"],"sourceRoot":""}